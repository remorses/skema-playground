var $c04bddb4e0a094dd749a0c73534a32f$exports = {};
var $c04bddb4e0a094dd749a0c73534a32f$var$process = $parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "process");
$parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "graphql/language/visitor");
$parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "ts-invariant");
$parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "tslib");
$parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "fast-json-stable-stringify");
$parcel$require("1c04bddb4e0a094dd749a0c73534a32f", "@wry/equality");
$c04bddb4e0a094dd749a0c73534a32f$exports.isEqual = $c04bddb4e0a094dd749a0c73534a32f$import$isEqual;

function $c04bddb4e0a094dd749a0c73534a32f$export$isScalarValue(value) {
  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isNumberValue(value) {
  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isStringValue(value) {
  return value.kind === 'StringValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isBooleanValue(value) {
  return value.kind === 'BooleanValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isIntValue(value) {
  return value.kind === 'IntValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isFloatValue(value) {
  return value.kind === 'FloatValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isVariable(value) {
  return value.kind === 'Variable';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isObjectValue(value) {
  return value.kind === 'ObjectValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isListValue(value) {
  return value.kind === 'ListValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isEnumValue(value) {
  return value.kind === 'EnumValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isNullValue(value) {
  return value.kind === 'NullValue';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(argObj, name, value, variables) {
  if ($c04bddb4e0a094dd749a0c73534a32f$var$isIntValue(value) || $c04bddb4e0a094dd749a0c73534a32f$var$isFloatValue(value)) {
    argObj[name.value] = Number(value.value);
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isBooleanValue(value) || $c04bddb4e0a094dd749a0c73534a32f$var$isStringValue(value)) {
    argObj[name.value] = value.value;
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isObjectValue(value)) {
    var nestedArgObj_1 = {};
    value.fields.map(function (obj) {
      return $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);
    });
    argObj[name.value] = nestedArgObj_1;
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isVariable(value)) {
    var variableValue = (variables || {})[value.name.value];
    argObj[name.value] = variableValue;
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isListValue(value)) {
    argObj[name.value] = value.values.map(function (listValue) {
      var nestedArgArrayObj = {};
      $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);
      return nestedArgArrayObj[name.value];
    });
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isEnumValue(value)) {
    argObj[name.value] = value.value;
  } else if ($c04bddb4e0a094dd749a0c73534a32f$var$isNullValue(value)) {
    argObj[name.value] = null;
  } else {
    throw "production" === "production" ? new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError(17) : new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError("The inline argument \"" + name.value + "\" of kind \"" + value.kind + "\"" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');
  }
}

function $c04bddb4e0a094dd749a0c73534a32f$export$storeKeyNameFromField(field, variables) {
  var directivesObj = null;

  if (field.directives) {
    directivesObj = {};
    field.directives.forEach(function (directive) {
      directivesObj[directive.name.value] = {};

      if (directive.arguments) {
        directive.arguments.forEach(function (_a) {
          var name = _a.name,
              value = _a.value;
          return $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);
        });
      }
    });
  }

  var argObj = null;

  if (field.arguments && field.arguments.length) {
    argObj = {};
    field.arguments.forEach(function (_a) {
      var name = _a.name,
          value = _a.value;
      return $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(argObj, name, value, variables);
    });
  }

  return $c04bddb4e0a094dd749a0c73534a32f$export$getStoreKeyName(field.name.value, argObj, directivesObj);
}

var $c04bddb4e0a094dd749a0c73534a32f$var$KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];

function $c04bddb4e0a094dd749a0c73534a32f$export$getStoreKeyName(fieldName, args, directives) {
  if (directives && directives['connection'] && directives['connection']['key']) {
    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {
      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];
      filterKeys.sort();
      var queryArgs_1 = args;
      var filteredArgs_1 = {};
      filterKeys.forEach(function (key) {
        filteredArgs_1[key] = queryArgs_1[key];
      });
      return directives['connection']['key'] + "(" + JSON.stringify(filteredArgs_1) + ")";
    } else {
      return directives['connection']['key'];
    }
  }

  var completeFieldName = fieldName;

  if (args) {
    var stringifiedArgs = $c04bddb4e0a094dd749a0c73534a32f$import$stringify(args);
    completeFieldName += "(" + stringifiedArgs + ")";
  }

  if (directives) {
    Object.keys(directives).forEach(function (key) {
      if ($c04bddb4e0a094dd749a0c73534a32f$var$KNOWN_DIRECTIVES.indexOf(key) !== -1) return;

      if (directives[key] && Object.keys(directives[key]).length) {
        completeFieldName += "@" + key + "(" + JSON.stringify(directives[key]) + ")";
      } else {
        completeFieldName += "@" + key;
      }
    });
  }

  return completeFieldName;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$argumentsObjectFromField(field, variables) {
  if (field.arguments && field.arguments.length) {
    var argObj_1 = {};
    field.arguments.forEach(function (_a) {
      var name = _a.name,
          value = _a.value;
      return $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(argObj_1, name, value, variables);
    });
    return argObj_1;
  }

  return null;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$resultKeyNameFromField(field) {
  return field.alias ? field.alias.value : field.name.value;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isField(selection) {
  return selection.kind === 'Field';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isInlineFragment(selection) {
  return selection.kind === 'InlineFragment';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isIdValue(idObject) {
  return idObject && idObject.type === 'id' && typeof idObject.generated === 'boolean';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$toIdValue(idConfig, generated) {
  if (generated === void 0) {
    generated = false;
  }

  return $c04bddb4e0a094dd749a0c73534a32f$import$__assign({
    type: 'id',
    generated: generated
  }, typeof idConfig === 'string' ? {
    id: idConfig,
    typename: undefined
  } : idConfig);
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isJsonValue(jsonObject) {
  return jsonObject != null && typeof jsonObject === 'object' && jsonObject.type === 'json';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$defaultValueFromVariable(node) {
  throw "production" === "production" ? new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError(18) : new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError("Variable nodes are not supported by valueFromNode");
}

function $c04bddb4e0a094dd749a0c73534a32f$export$valueFromNode(node, onVariable) {
  if (onVariable === void 0) {
    onVariable = $c04bddb4e0a094dd749a0c73534a32f$var$defaultValueFromVariable;
  }

  switch (node.kind) {
    case 'Variable':
      return onVariable(node);

    case 'NullValue':
      return null;

    case 'IntValue':
      return parseInt(node.value, 10);

    case 'FloatValue':
      return parseFloat(node.value);

    case 'ListValue':
      return node.values.map(function (v) {
        return $c04bddb4e0a094dd749a0c73534a32f$export$valueFromNode(v, onVariable);
      });

    case 'ObjectValue':
      {
        var value = {};

        for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {
          var field = _a[_i];
          value[field.name.value] = $c04bddb4e0a094dd749a0c73534a32f$export$valueFromNode(field.value, onVariable);
        }

        return value;
      }

    default:
      return node.value;
  }
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getDirectiveInfoFromField(field, variables) {
  if (field.directives && field.directives.length) {
    var directiveObj_1 = {};
    field.directives.forEach(function (directive) {
      directiveObj_1[directive.name.value] = $c04bddb4e0a094dd749a0c73534a32f$export$argumentsObjectFromField(directive, variables);
    });
    return directiveObj_1;
  }

  return null;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$shouldInclude(selection, variables) {
  if (variables === void 0) {
    variables = {};
  }

  return $c04bddb4e0a094dd749a0c73534a32f$export$getInclusionDirectives(selection.directives).every(function (_a) {
    var directive = _a.directive,
        ifArgument = _a.ifArgument;
    var evaledValue = false;

    if (ifArgument.value.kind === 'Variable') {
      evaledValue = variables[ifArgument.value.name.value];
      "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(evaledValue !== void 0, 3) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(evaledValue !== void 0, "Invalid variable referenced in @" + directive.name.value + " directive.");
    } else {
      evaledValue = ifArgument.value.value;
    }

    return directive.name.value === 'skip' ? !evaledValue : evaledValue;
  });
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getDirectiveNames(doc) {
  var names = [];
  $c04bddb4e0a094dd749a0c73534a32f$import$visit(doc, {
    Directive: function (node) {
      names.push(node.name.value);
    }
  });
  return names;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$hasDirectives(names, doc) {
  return $c04bddb4e0a094dd749a0c73534a32f$export$getDirectiveNames(doc).some(function (name) {
    return names.indexOf(name) > -1;
  });
}

function $c04bddb4e0a094dd749a0c73534a32f$export$hasClientExports(document) {
  return document && $c04bddb4e0a094dd749a0c73534a32f$export$hasDirectives(['client'], document) && $c04bddb4e0a094dd749a0c73534a32f$export$hasDirectives(['export'], document);
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isInclusionDirective(_a) {
  var value = _a.name.value;
  return value === 'skip' || value === 'include';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getInclusionDirectives(directives) {
  return directives ? directives.filter($c04bddb4e0a094dd749a0c73534a32f$var$isInclusionDirective).map(function (directive) {
    var directiveArguments = directive.arguments;
    var directiveName = directive.name.value;
    "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(directiveArguments && directiveArguments.length === 1, 4) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(directiveArguments && directiveArguments.length === 1, "Incorrect number of arguments for the @" + directiveName + " directive.");
    var ifArgument = directiveArguments[0];
    "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(ifArgument.name && ifArgument.name.value === 'if', 5) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(ifArgument.name && ifArgument.name.value === 'if', "Invalid argument for the @" + directiveName + " directive.");
    var ifValue = ifArgument.value;
    "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 6) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), "Argument for the @" + directiveName + " directive must be a variable or a boolean value.");
    return {
      directive: directive,
      ifArgument: ifArgument
    };
  }) : [];
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentQueryDocument(document, fragmentName) {
  var actualFragmentName = fragmentName;
  var fragments = [];
  document.definitions.forEach(function (definition) {
    if (definition.kind === 'OperationDefinition') {
      throw "production" === "production" ? new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError(1) : new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError("Found a " + definition.operation + " operation" + (definition.name ? " named '" + definition.name.value + "'" : '') + ". " + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.');
    }

    if (definition.kind === 'FragmentDefinition') {
      fragments.push(definition);
    }
  });

  if (typeof actualFragmentName === 'undefined') {
    "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(fragments.length === 1, 2) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(fragments.length === 1, "Found " + fragments.length + " fragments. `fragmentName` must be provided when there is not exactly 1 fragment.");
    actualFragmentName = fragments[0].name.value;
  }

  var query = $c04bddb4e0a094dd749a0c73534a32f$import$__assign({}, document, {
    definitions: [{
      kind: 'OperationDefinition',
      operation: 'query',
      selectionSet: {
        kind: 'SelectionSet',
        selections: [{
          kind: 'FragmentSpread',
          name: {
            kind: 'Name',
            value: actualFragmentName
          }
        }]
      }
    }].concat(document.definitions)
  });
  return query;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$assign(target) {
  var sources = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    sources[_i - 1] = arguments[_i];
  }

  sources.forEach(function (source) {
    if (typeof source === 'undefined' || source === null) {
      return;
    }

    Object.keys(source).forEach(function (key) {
      target[key] = source[key];
    });
  });
  return target;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getMutationDefinition(doc) {
  $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc);
  var mutationDef = doc.definitions.filter(function (definition) {
    return definition.kind === 'OperationDefinition' && definition.operation === 'mutation';
  })[0];
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(mutationDef, 7) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(mutationDef, 'Must contain a mutation definition.');
  return mutationDef;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc) {
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc && doc.kind === 'Document', 8) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc && doc.kind === 'Document', "Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql");
  var operations = doc.definitions.filter(function (d) {
    return d.kind !== 'FragmentDefinition';
  }).map(function (definition) {
    if (definition.kind !== 'OperationDefinition') {
      throw "production" === "production" ? new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError(9) : new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError("Schema type definitions not allowed in queries. Found: \"" + definition.kind + "\"");
    }

    return definition;
  });
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(operations.length <= 1, 10) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(operations.length <= 1, "Ambiguous GraphQL document: contains " + operations.length + " operations");
  return doc;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinition(doc) {
  $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc);
  return doc.definitions.filter(function (definition) {
    return definition.kind === 'OperationDefinition';
  })[0];
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinitionOrDie(document) {
  var def = $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinition(document);
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(def, 11) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(def, "GraphQL document is missing an operation");
  return def;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getOperationName(doc) {
  return doc.definitions.filter(function (definition) {
    return definition.kind === 'OperationDefinition' && definition.name;
  }).map(function (x) {
    return x.name.value;
  })[0] || null;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinitions(doc) {
  return doc.definitions.filter(function (definition) {
    return definition.kind === 'FragmentDefinition';
  });
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getQueryDefinition(doc) {
  var queryDef = $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinition(doc);
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(queryDef && queryDef.operation === 'query', 12) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');
  return queryDef;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinition(doc) {
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc.kind === 'Document', 13) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc.kind === 'Document', "Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql");
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc.definitions.length <= 1, 14) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');
  var fragmentDef = doc.definitions[0];
  "production" === "production" ? $c04bddb4e0a094dd749a0c73534a32f$import$invariant(fragmentDef.kind === 'FragmentDefinition', 15) : $c04bddb4e0a094dd749a0c73534a32f$import$invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');
  return fragmentDef;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getMainDefinition(queryDoc) {
  $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(queryDoc);
  var fragmentDefinition;

  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {
    var definition = _a[_i];

    if (definition.kind === 'OperationDefinition') {
      var operation = definition.operation;

      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {
        return definition;
      }
    }

    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {
      fragmentDefinition = definition;
    }
  }

  if (fragmentDefinition) {
    return fragmentDefinition;
  }

  throw "production" === "production" ? new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError(16) : new $c04bddb4e0a094dd749a0c73534a32f$import$InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');
}

function $c04bddb4e0a094dd749a0c73534a32f$export$createFragmentMap(fragments) {
  if (fragments === void 0) {
    fragments = [];
  }

  var symTable = {};
  fragments.forEach(function (fragment) {
    symTable[fragment.name.value] = fragment;
  });
  return symTable;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getDefaultValues(definition) {
  if (definition && definition.variableDefinitions && definition.variableDefinitions.length) {
    var defaultValues = definition.variableDefinitions.filter(function (_a) {
      var defaultValue = _a.defaultValue;
      return defaultValue;
    }).map(function (_a) {
      var variable = _a.variable,
          defaultValue = _a.defaultValue;
      var defaultValueObj = {};
      $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);
      return defaultValueObj;
    });
    return $c04bddb4e0a094dd749a0c73534a32f$export$assign.apply(void 0, [{}].concat(defaultValues));
  }

  return {};
}

function $c04bddb4e0a094dd749a0c73534a32f$export$variablesInOperation(operation) {
  var names = new Set();

  if (operation.variableDefinitions) {
    for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {
      var definition = _a[_i];
      names.add(definition.variable.name.value);
    }
  }

  return names;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$filterInPlace(array, test, context) {
  var target = 0;
  array.forEach(function (elem, i) {
    if (test.call(this, elem, i, array)) {
      array[target++] = elem;
    }
  }, context);
  array.length = target;
  return array;
}

var $c04bddb4e0a094dd749a0c73534a32f$var$TYPENAME_FIELD = {
  kind: 'Field',
  name: {
    kind: 'Name',
    value: '__typename'
  }
};

function $c04bddb4e0a094dd749a0c73534a32f$var$isEmpty(op, fragments) {
  return op.selectionSet.selections.every(function (selection) {
    return selection.kind === 'FragmentSpread' && $c04bddb4e0a094dd749a0c73534a32f$var$isEmpty(fragments[selection.name.value], fragments);
  });
}

function $c04bddb4e0a094dd749a0c73534a32f$var$nullIfDocIsEmpty(doc) {
  return $c04bddb4e0a094dd749a0c73534a32f$var$isEmpty($c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinition(doc) || $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinition(doc), $c04bddb4e0a094dd749a0c73534a32f$export$createFragmentMap($c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinitions(doc))) ? null : doc;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$getDirectiveMatcher(directives) {
  return function directiveMatcher(directive) {
    return directives.some(function (dir) {
      return dir.name && dir.name === directive.name.value || dir.test && dir.test(directive);
    });
  };
}

function $c04bddb4e0a094dd749a0c73534a32f$export$removeDirectivesFromDocument(directives, doc) {
  var variablesInUse = Object.create(null);
  var variablesToRemove = [];
  var fragmentSpreadsInUse = Object.create(null);
  var fragmentSpreadsToRemove = [];
  var modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$var$nullIfDocIsEmpty($c04bddb4e0a094dd749a0c73534a32f$import$visit(doc, {
    Variable: {
      enter: function (node, _key, parent) {
        if (parent.kind !== 'VariableDefinition') {
          variablesInUse[node.name.value] = true;
        }
      }
    },
    Field: {
      enter: function (node) {
        if (directives && node.directives) {
          var shouldRemoveField = directives.some(function (directive) {
            return directive.remove;
          });

          if (shouldRemoveField && node.directives && node.directives.some($c04bddb4e0a094dd749a0c73534a32f$var$getDirectiveMatcher(directives))) {
            if (node.arguments) {
              node.arguments.forEach(function (arg) {
                if (arg.value.kind === 'Variable') {
                  variablesToRemove.push({
                    name: arg.value.name.value
                  });
                }
              });
            }

            if (node.selectionSet) {
              $c04bddb4e0a094dd749a0c73534a32f$var$getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {
                fragmentSpreadsToRemove.push({
                  name: frag.name.value
                });
              });
            }

            return null;
          }
        }
      }
    },
    FragmentSpread: {
      enter: function (node) {
        fragmentSpreadsInUse[node.name.value] = true;
      }
    },
    Directive: {
      enter: function (node) {
        if ($c04bddb4e0a094dd749a0c73534a32f$var$getDirectiveMatcher(directives)(node)) {
          return null;
        }
      }
    }
  }));

  if (modifiedDoc && $c04bddb4e0a094dd749a0c73534a32f$var$filterInPlace(variablesToRemove, function (v) {
    return !variablesInUse[v.name];
  }).length) {
    modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$export$removeArgumentsFromDocument(variablesToRemove, modifiedDoc);
  }

  if (modifiedDoc && $c04bddb4e0a094dd749a0c73534a32f$var$filterInPlace(fragmentSpreadsToRemove, function (fs) {
    return !fragmentSpreadsInUse[fs.name];
  }).length) {
    modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$export$removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);
  }

  return modifiedDoc;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$addTypenameToDocument(doc) {
  return $c04bddb4e0a094dd749a0c73534a32f$import$visit($c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc), {
    SelectionSet: {
      enter: function (node, _key, parent) {
        if (parent && parent.kind === 'OperationDefinition') {
          return;
        }

        var selections = node.selections;

        if (!selections) {
          return;
        }

        var skip = selections.some(function (selection) {
          return $c04bddb4e0a094dd749a0c73534a32f$export$isField(selection) && (selection.name.value === '__typename' || selection.name.value.lastIndexOf('__', 0) === 0);
        });

        if (skip) {
          return;
        }

        var field = parent;

        if ($c04bddb4e0a094dd749a0c73534a32f$export$isField(field) && field.directives && field.directives.some(function (d) {
          return d.name.value === 'export';
        })) {
          return;
        }

        return $c04bddb4e0a094dd749a0c73534a32f$import$__assign({}, node, {
          selections: selections.concat([$c04bddb4e0a094dd749a0c73534a32f$var$TYPENAME_FIELD])
        });
      }
    }
  });
}

var $c04bddb4e0a094dd749a0c73534a32f$var$connectionRemoveConfig = {
  test: function (directive) {
    var willRemove = directive.name.value === 'connection';

    if (willRemove) {
      if (!directive.arguments || !directive.arguments.some(function (arg) {
        return arg.name.value === 'key';
      })) {
        "production" === "production" || $c04bddb4e0a094dd749a0c73534a32f$import$invariant.warn('Removing an @connection directive even though it does not have a key. ' + 'You may want to use the key parameter to specify a store key.');
      }
    }

    return willRemove;
  }
};

function $c04bddb4e0a094dd749a0c73534a32f$export$removeConnectionDirectiveFromDocument(doc) {
  return $c04bddb4e0a094dd749a0c73534a32f$export$removeDirectivesFromDocument([$c04bddb4e0a094dd749a0c73534a32f$var$connectionRemoveConfig], $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc));
}

function $c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {
  if (nestedCheck === void 0) {
    nestedCheck = true;
  }

  return selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {
    return $c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelection(directives, selection, nestedCheck);
  });
}

function $c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelection(directives, selection, nestedCheck) {
  if (nestedCheck === void 0) {
    nestedCheck = true;
  }

  if (!$c04bddb4e0a094dd749a0c73534a32f$export$isField(selection)) {
    return true;
  }

  if (!selection.directives) {
    return false;
  }

  return selection.directives.some($c04bddb4e0a094dd749a0c73534a32f$var$getDirectiveMatcher(directives)) || nestedCheck && $c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getDirectivesFromDocument(directives, doc) {
  $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(doc);
  var parentPath;
  return $c04bddb4e0a094dd749a0c73534a32f$var$nullIfDocIsEmpty($c04bddb4e0a094dd749a0c73534a32f$import$visit(doc, {
    SelectionSet: {
      enter: function (node, _key, _parent, path) {
        var currentPath = path.join('-');

        if (!parentPath || currentPath === parentPath || !currentPath.startsWith(parentPath)) {
          if (node.selections) {
            var selectionsWithDirectives = node.selections.filter(function (selection) {
              return $c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelection(directives, selection);
            });

            if ($c04bddb4e0a094dd749a0c73534a32f$var$hasDirectivesInSelectionSet(directives, node, false)) {
              parentPath = currentPath;
            }

            return $c04bddb4e0a094dd749a0c73534a32f$import$__assign({}, node, {
              selections: selectionsWithDirectives
            });
          } else {
            return null;
          }
        }
      }
    }
  }));
}

function $c04bddb4e0a094dd749a0c73534a32f$var$getArgumentMatcher(config) {
  return function argumentMatcher(argument) {
    return config.some(function (aConfig) {
      return argument.value && argument.value.kind === 'Variable' && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));
    });
  };
}

function $c04bddb4e0a094dd749a0c73534a32f$export$removeArgumentsFromDocument(config, doc) {
  var argMatcher = $c04bddb4e0a094dd749a0c73534a32f$var$getArgumentMatcher(config);
  return $c04bddb4e0a094dd749a0c73534a32f$var$nullIfDocIsEmpty($c04bddb4e0a094dd749a0c73534a32f$import$visit(doc, {
    OperationDefinition: {
      enter: function (node) {
        return $c04bddb4e0a094dd749a0c73534a32f$import$__assign({}, node, {
          variableDefinitions: node.variableDefinitions.filter(function (varDef) {
            return !config.some(function (arg) {
              return arg.name === varDef.variable.name.value;
            });
          })
        });
      }
    },
    Field: {
      enter: function (node) {
        var shouldRemoveField = config.some(function (argConfig) {
          return argConfig.remove;
        });

        if (shouldRemoveField) {
          var argMatchCount_1 = 0;
          node.arguments.forEach(function (arg) {
            if (argMatcher(arg)) {
              argMatchCount_1 += 1;
            }
          });

          if (argMatchCount_1 === 1) {
            return null;
          }
        }
      }
    },
    Argument: {
      enter: function (node) {
        if (argMatcher(node)) {
          return null;
        }
      }
    }
  }));
}

function $c04bddb4e0a094dd749a0c73534a32f$export$removeFragmentSpreadFromDocument(config, doc) {
  function enter(node) {
    if (config.some(function (def) {
      return def.name === node.name.value;
    })) {
      return null;
    }
  }

  return $c04bddb4e0a094dd749a0c73534a32f$var$nullIfDocIsEmpty($c04bddb4e0a094dd749a0c73534a32f$import$visit(doc, {
    FragmentSpread: {
      enter: enter
    },
    FragmentDefinition: {
      enter: enter
    }
  }));
}

function $c04bddb4e0a094dd749a0c73534a32f$var$getAllFragmentSpreadsFromSelectionSet(selectionSet) {
  var allFragments = [];
  selectionSet.selections.forEach(function (selection) {
    if (($c04bddb4e0a094dd749a0c73534a32f$export$isField(selection) || $c04bddb4e0a094dd749a0c73534a32f$export$isInlineFragment(selection)) && selection.selectionSet) {
      $c04bddb4e0a094dd749a0c73534a32f$var$getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) {
        return allFragments.push(frag);
      });
    } else if (selection.kind === 'FragmentSpread') {
      allFragments.push(selection);
    }
  });
  return allFragments;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$buildQueryFromSelectionSet(document) {
  var definition = $c04bddb4e0a094dd749a0c73534a32f$export$getMainDefinition(document);
  var definitionOperation = definition.operation;

  if (definitionOperation === 'query') {
    return document;
  }

  var modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$import$visit(document, {
    OperationDefinition: {
      enter: function (node) {
        return $c04bddb4e0a094dd749a0c73534a32f$import$__assign({}, node, {
          operation: 'query'
        });
      }
    }
  });
  return modifiedDoc;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$removeClientSetsFromDocument(document) {
  $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument(document);
  var modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$export$removeDirectivesFromDocument([{
    test: function (directive) {
      return directive.name.value === 'client';
    },
    remove: true
  }], document);

  if (modifiedDoc) {
    modifiedDoc = $c04bddb4e0a094dd749a0c73534a32f$import$visit(modifiedDoc, {
      FragmentDefinition: {
        enter: function (node) {
          if (node.selectionSet) {
            var isTypenameOnly = node.selectionSet.selections.every(function (selection) {
              return $c04bddb4e0a094dd749a0c73534a32f$export$isField(selection) && selection.name.value === '__typename';
            });

            if (isTypenameOnly) {
              return null;
            }
          }
        }
      }
    });
  }

  return modifiedDoc;
}

var $c04bddb4e0a094dd749a0c73534a32f$export$canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' && navigator.product === 'ReactNative');
var $c04bddb4e0a094dd749a0c73534a32f$var$toString = Object.prototype.toString;

function $c04bddb4e0a094dd749a0c73534a32f$export$cloneDeep(value) {
  return $c04bddb4e0a094dd749a0c73534a32f$var$cloneDeepHelper(value, new Map());
}

function $c04bddb4e0a094dd749a0c73534a32f$var$cloneDeepHelper(val, seen) {
  switch ($c04bddb4e0a094dd749a0c73534a32f$var$toString.call(val)) {
    case "[object Array]":
      {
        if (seen.has(val)) return seen.get(val);
        var copy_1 = val.slice(0);
        seen.set(val, copy_1);
        copy_1.forEach(function (child, i) {
          copy_1[i] = $c04bddb4e0a094dd749a0c73534a32f$var$cloneDeepHelper(child, seen);
        });
        return copy_1;
      }

    case "[object Object]":
      {
        if (seen.has(val)) return seen.get(val);
        var copy_2 = Object.create(Object.getPrototypeOf(val));
        seen.set(val, copy_2);
        Object.keys(val).forEach(function (key) {
          copy_2[key] = $c04bddb4e0a094dd749a0c73534a32f$var$cloneDeepHelper(val[key], seen);
        });
        return copy_2;
      }

    default:
      return val;
  }
}

function $c04bddb4e0a094dd749a0c73534a32f$export$getEnv() {
  if (typeof $c04bddb4e0a094dd749a0c73534a32f$var$process !== 'undefined' && "production") {
    return "production";
  }

  return 'development';
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isEnv(env) {
  return $c04bddb4e0a094dd749a0c73534a32f$export$getEnv() === env;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isProduction() {
  return $c04bddb4e0a094dd749a0c73534a32f$export$isEnv('production') === true;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isDevelopment() {
  return $c04bddb4e0a094dd749a0c73534a32f$export$isEnv('development') === true;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$isTest() {
  return $c04bddb4e0a094dd749a0c73534a32f$export$isEnv('test') === true;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$tryFunctionOrLogError(f) {
  try {
    return f();
  } catch (e) {
    if (console.error) {
      console.error(e);
    }
  }
}

function $c04bddb4e0a094dd749a0c73534a32f$export$graphQLResultHasError(result) {
  return result.errors && result.errors.length;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$deepFreeze(o) {
  Object.freeze(o);
  Object.getOwnPropertyNames(o).forEach(function (prop) {
    if (o[prop] !== null && (typeof o[prop] === 'object' || typeof o[prop] === 'function') && !Object.isFrozen(o[prop])) {
      $c04bddb4e0a094dd749a0c73534a32f$var$deepFreeze(o[prop]);
    }
  });
  return o;
}

function $c04bddb4e0a094dd749a0c73534a32f$export$maybeDeepFreeze(obj) {
  if ($c04bddb4e0a094dd749a0c73534a32f$export$isDevelopment() || $c04bddb4e0a094dd749a0c73534a32f$export$isTest()) {
    var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';

    if (!symbolIsPolyfilled) {
      return $c04bddb4e0a094dd749a0c73534a32f$var$deepFreeze(obj);
    }
  }

  return obj;
}

var $c04bddb4e0a094dd749a0c73534a32f$var$hasOwnProperty = Object.prototype.hasOwnProperty;

function $c04bddb4e0a094dd749a0c73534a32f$export$mergeDeep() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  return $c04bddb4e0a094dd749a0c73534a32f$export$mergeDeepArray(sources);
}

function $c04bddb4e0a094dd749a0c73534a32f$export$mergeDeepArray(sources) {
  var target = sources[0] || {};
  var count = sources.length;

  if (count > 1) {
    var pastCopies = [];
    target = $c04bddb4e0a094dd749a0c73534a32f$var$shallowCopyForMerge(target, pastCopies);

    for (var i = 1; i < count; ++i) {
      target = $c04bddb4e0a094dd749a0c73534a32f$var$mergeHelper(target, sources[i], pastCopies);
    }
  }

  return target;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$isObject(obj) {
  return obj !== null && typeof obj === 'object';
}

function $c04bddb4e0a094dd749a0c73534a32f$var$mergeHelper(target, source, pastCopies) {
  if ($c04bddb4e0a094dd749a0c73534a32f$var$isObject(source) && $c04bddb4e0a094dd749a0c73534a32f$var$isObject(target)) {
    if (Object.isExtensible && !Object.isExtensible(target)) {
      target = $c04bddb4e0a094dd749a0c73534a32f$var$shallowCopyForMerge(target, pastCopies);
    }

    Object.keys(source).forEach(function (sourceKey) {
      var sourceValue = source[sourceKey];

      if ($c04bddb4e0a094dd749a0c73534a32f$var$hasOwnProperty.call(target, sourceKey)) {
        var targetValue = target[sourceKey];

        if (sourceValue !== targetValue) {
          target[sourceKey] = $c04bddb4e0a094dd749a0c73534a32f$var$mergeHelper($c04bddb4e0a094dd749a0c73534a32f$var$shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);
        }
      } else {
        target[sourceKey] = sourceValue;
      }
    });
    return target;
  }

  return source;
}

function $c04bddb4e0a094dd749a0c73534a32f$var$shallowCopyForMerge(value, pastCopies) {
  if (value !== null && typeof value === 'object' && pastCopies.indexOf(value) < 0) {
    if (Array.isArray(value)) {
      value = value.slice(0);
    } else {
      value = $c04bddb4e0a094dd749a0c73534a32f$import$__assign({
        __proto__: Object.getPrototypeOf(value)
      }, value);
    }

    pastCopies.push(value);
  }

  return value;
}

var $c04bddb4e0a094dd749a0c73534a32f$var$haveWarned = Object.create({});

function $c04bddb4e0a094dd749a0c73534a32f$export$warnOnceInDevelopment(msg, type) {
  if (type === void 0) {
    type = 'warn';
  }

  if (!$c04bddb4e0a094dd749a0c73534a32f$export$isProduction() && !$c04bddb4e0a094dd749a0c73534a32f$var$haveWarned[msg]) {
    if (!$c04bddb4e0a094dd749a0c73534a32f$export$isTest()) {
      $c04bddb4e0a094dd749a0c73534a32f$var$haveWarned[msg] = true;
    }

    if (type === 'error') {
      console.error(msg);
    } else {
      console.warn(msg);
    }
  }
}

function $c04bddb4e0a094dd749a0c73534a32f$export$stripSymbols(data) {
  return JSON.parse(JSON.stringify(data));
}

$c04bddb4e0a094dd749a0c73534a32f$exports.warnOnceInDevelopment = $c04bddb4e0a094dd749a0c73534a32f$export$warnOnceInDevelopment;
$c04bddb4e0a094dd749a0c73534a32f$exports.variablesInOperation = $c04bddb4e0a094dd749a0c73534a32f$export$variablesInOperation;
$c04bddb4e0a094dd749a0c73534a32f$exports.valueToObjectRepresentation = $c04bddb4e0a094dd749a0c73534a32f$export$valueToObjectRepresentation;
$c04bddb4e0a094dd749a0c73534a32f$exports.valueFromNode = $c04bddb4e0a094dd749a0c73534a32f$export$valueFromNode;
$c04bddb4e0a094dd749a0c73534a32f$exports.tryFunctionOrLogError = $c04bddb4e0a094dd749a0c73534a32f$export$tryFunctionOrLogError;
$c04bddb4e0a094dd749a0c73534a32f$exports.toIdValue = $c04bddb4e0a094dd749a0c73534a32f$export$toIdValue;
$c04bddb4e0a094dd749a0c73534a32f$exports.stripSymbols = $c04bddb4e0a094dd749a0c73534a32f$export$stripSymbols;
$c04bddb4e0a094dd749a0c73534a32f$exports.storeKeyNameFromField = $c04bddb4e0a094dd749a0c73534a32f$export$storeKeyNameFromField;
$c04bddb4e0a094dd749a0c73534a32f$exports.shouldInclude = $c04bddb4e0a094dd749a0c73534a32f$export$shouldInclude;
$c04bddb4e0a094dd749a0c73534a32f$exports.resultKeyNameFromField = $c04bddb4e0a094dd749a0c73534a32f$export$resultKeyNameFromField;
$c04bddb4e0a094dd749a0c73534a32f$exports.removeFragmentSpreadFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$removeFragmentSpreadFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.removeDirectivesFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$removeDirectivesFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.removeConnectionDirectiveFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$removeConnectionDirectiveFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.removeClientSetsFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$removeClientSetsFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.removeArgumentsFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$removeArgumentsFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.mergeDeepArray = $c04bddb4e0a094dd749a0c73534a32f$export$mergeDeepArray;
$c04bddb4e0a094dd749a0c73534a32f$exports.mergeDeep = $c04bddb4e0a094dd749a0c73534a32f$export$mergeDeep;
$c04bddb4e0a094dd749a0c73534a32f$exports.maybeDeepFreeze = $c04bddb4e0a094dd749a0c73534a32f$export$maybeDeepFreeze;
$c04bddb4e0a094dd749a0c73534a32f$exports.isTest = $c04bddb4e0a094dd749a0c73534a32f$export$isTest;
$c04bddb4e0a094dd749a0c73534a32f$exports.isScalarValue = $c04bddb4e0a094dd749a0c73534a32f$export$isScalarValue;
$c04bddb4e0a094dd749a0c73534a32f$exports.isProduction = $c04bddb4e0a094dd749a0c73534a32f$export$isProduction;
$c04bddb4e0a094dd749a0c73534a32f$exports.isNumberValue = $c04bddb4e0a094dd749a0c73534a32f$export$isNumberValue;
$c04bddb4e0a094dd749a0c73534a32f$exports.isJsonValue = $c04bddb4e0a094dd749a0c73534a32f$export$isJsonValue;
$c04bddb4e0a094dd749a0c73534a32f$exports.isInlineFragment = $c04bddb4e0a094dd749a0c73534a32f$export$isInlineFragment;
$c04bddb4e0a094dd749a0c73534a32f$exports.isIdValue = $c04bddb4e0a094dd749a0c73534a32f$export$isIdValue;
$c04bddb4e0a094dd749a0c73534a32f$exports.isField = $c04bddb4e0a094dd749a0c73534a32f$export$isField;
$c04bddb4e0a094dd749a0c73534a32f$exports.isEnv = $c04bddb4e0a094dd749a0c73534a32f$export$isEnv;
$c04bddb4e0a094dd749a0c73534a32f$exports.isDevelopment = $c04bddb4e0a094dd749a0c73534a32f$export$isDevelopment;
$c04bddb4e0a094dd749a0c73534a32f$exports.hasDirectives = $c04bddb4e0a094dd749a0c73534a32f$export$hasDirectives;
$c04bddb4e0a094dd749a0c73534a32f$exports.hasClientExports = $c04bddb4e0a094dd749a0c73534a32f$export$hasClientExports;
$c04bddb4e0a094dd749a0c73534a32f$exports.graphQLResultHasError = $c04bddb4e0a094dd749a0c73534a32f$export$graphQLResultHasError;
$c04bddb4e0a094dd749a0c73534a32f$exports.getStoreKeyName = $c04bddb4e0a094dd749a0c73534a32f$export$getStoreKeyName;
$c04bddb4e0a094dd749a0c73534a32f$exports.getQueryDefinition = $c04bddb4e0a094dd749a0c73534a32f$export$getQueryDefinition;
$c04bddb4e0a094dd749a0c73534a32f$exports.getOperationName = $c04bddb4e0a094dd749a0c73534a32f$export$getOperationName;
$c04bddb4e0a094dd749a0c73534a32f$exports.getOperationDefinitionOrDie = $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinitionOrDie;
$c04bddb4e0a094dd749a0c73534a32f$exports.getOperationDefinition = $c04bddb4e0a094dd749a0c73534a32f$export$getOperationDefinition;
$c04bddb4e0a094dd749a0c73534a32f$exports.getMutationDefinition = $c04bddb4e0a094dd749a0c73534a32f$export$getMutationDefinition;
$c04bddb4e0a094dd749a0c73534a32f$exports.getMainDefinition = $c04bddb4e0a094dd749a0c73534a32f$export$getMainDefinition;
$c04bddb4e0a094dd749a0c73534a32f$exports.getInclusionDirectives = $c04bddb4e0a094dd749a0c73534a32f$export$getInclusionDirectives;
$c04bddb4e0a094dd749a0c73534a32f$exports.getFragmentQueryDocument = $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentQueryDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.getFragmentDefinitions = $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinitions;
$c04bddb4e0a094dd749a0c73534a32f$exports.getFragmentDefinition = $c04bddb4e0a094dd749a0c73534a32f$export$getFragmentDefinition;
$c04bddb4e0a094dd749a0c73534a32f$exports.getEnv = $c04bddb4e0a094dd749a0c73534a32f$export$getEnv;
$c04bddb4e0a094dd749a0c73534a32f$exports.getDirectivesFromDocument = $c04bddb4e0a094dd749a0c73534a32f$export$getDirectivesFromDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.getDirectiveNames = $c04bddb4e0a094dd749a0c73534a32f$export$getDirectiveNames;
$c04bddb4e0a094dd749a0c73534a32f$exports.getDirectiveInfoFromField = $c04bddb4e0a094dd749a0c73534a32f$export$getDirectiveInfoFromField;
$c04bddb4e0a094dd749a0c73534a32f$exports.getDefaultValues = $c04bddb4e0a094dd749a0c73534a32f$export$getDefaultValues;
$c04bddb4e0a094dd749a0c73534a32f$exports.createFragmentMap = $c04bddb4e0a094dd749a0c73534a32f$export$createFragmentMap;
$c04bddb4e0a094dd749a0c73534a32f$exports.cloneDeep = $c04bddb4e0a094dd749a0c73534a32f$export$cloneDeep;
$c04bddb4e0a094dd749a0c73534a32f$exports.checkDocument = $c04bddb4e0a094dd749a0c73534a32f$export$checkDocument;
$c04bddb4e0a094dd749a0c73534a32f$exports.canUseWeakMap = $c04bddb4e0a094dd749a0c73534a32f$export$canUseWeakMap;
$c04bddb4e0a094dd749a0c73534a32f$exports.buildQueryFromSelectionSet = $c04bddb4e0a094dd749a0c73534a32f$export$buildQueryFromSelectionSet;
$c04bddb4e0a094dd749a0c73534a32f$exports.assign = $c04bddb4e0a094dd749a0c73534a32f$export$assign;
$c04bddb4e0a094dd749a0c73534a32f$exports.argumentsObjectFromField = $c04bddb4e0a094dd749a0c73534a32f$export$argumentsObjectFromField;
$c04bddb4e0a094dd749a0c73534a32f$exports.addTypenameToDocument = $c04bddb4e0a094dd749a0c73534a32f$export$addTypenameToDocument;