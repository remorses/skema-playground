var $c384fc88c29a42758c0c493c6963826e$exports = {};
$parcel$require("c384fc88c29a42758c0c493c6963826e", "tslib");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "classnames");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "react");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../../common/classes");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../../common/position");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../../common/props");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../icon/icon");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../popover/popover");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "../text/text");
$parcel$require("c384fc88c29a42758c0c493c6963826e", "./menu");

var $c384fc88c29a42758c0c493c6963826e$export$MenuItem =
/** @class */
function (_super) {
  $c384fc88c29a42758c0c493c6963826e$import$tslib_1.__extends(MenuItem, _super);

  function MenuItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  MenuItem.prototype.render = function () {
    var _a = this.props,
        active = _a.active,
        className = _a.className,
        children = _a.children,
        disabled = _a.disabled,
        icon = _a.icon,
        intent = _a.intent,
        labelElement = _a.labelElement,
        multiline = _a.multiline,
        popoverProps = _a.popoverProps,
        shouldDismissPopover = _a.shouldDismissPopover,
        text = _a.text,
        textClassName = _a.textClassName,
        _b = _a.tagName,
        TagName = _b === void 0 ? "a" : _b,
        htmlProps = $c384fc88c29a42758c0c493c6963826e$import$tslib_1.__rest(_a, ["active", "className", "children", "disabled", "icon", "intent", "labelElement", "multiline", "popoverProps", "shouldDismissPopover", "text", "textClassName", "tagName"]);

    var hasSubmenu = children != null;
    var intentClass = $c384fc88c29a42758c0c493c6963826e$import$Classes.intentClass(intent);
    var anchorClasses = $c384fc88c29a42758c0c493c6963826e$import$classNames($c384fc88c29a42758c0c493c6963826e$import$Classes.MENU_ITEM, intentClass, (_c = {}, _c[$c384fc88c29a42758c0c493c6963826e$import$Classes.ACTIVE] = active, _c[$c384fc88c29a42758c0c493c6963826e$import$Classes.INTENT_PRIMARY] = active && intentClass == null, _c[$c384fc88c29a42758c0c493c6963826e$import$Classes.DISABLED] = disabled, // prevent popover from closing when clicking on submenu trigger or disabled item
    _c[$c384fc88c29a42758c0c493c6963826e$import$Classes.POPOVER_DISMISS] = shouldDismissPopover && !disabled && !hasSubmenu, _c), className);
    var target = $c384fc88c29a42758c0c493c6963826e$import$React.createElement(TagName, $c384fc88c29a42758c0c493c6963826e$import$tslib_1.__assign({}, htmlProps, disabled ? $c384fc88c29a42758c0c493c6963826e$var$DISABLED_PROPS : {}, {
      className: anchorClasses
    }), $c384fc88c29a42758c0c493c6963826e$import$React.createElement($c384fc88c29a42758c0c493c6963826e$import$Icon, {
      icon: icon
    }), $c384fc88c29a42758c0c493c6963826e$import$React.createElement($c384fc88c29a42758c0c493c6963826e$import$Text, {
      className: $c384fc88c29a42758c0c493c6963826e$import$classNames($c384fc88c29a42758c0c493c6963826e$import$Classes.FILL, textClassName),
      ellipsize: !multiline
    }, text), this.maybeRenderLabel(labelElement), hasSubmenu && $c384fc88c29a42758c0c493c6963826e$import$React.createElement($c384fc88c29a42758c0c493c6963826e$import$Icon, {
      icon: "caret-right"
    }));
    var liClasses = $c384fc88c29a42758c0c493c6963826e$import$classNames((_d = {}, _d[$c384fc88c29a42758c0c493c6963826e$import$Classes.MENU_SUBMENU] = hasSubmenu, _d));
    return $c384fc88c29a42758c0c493c6963826e$import$React.createElement("li", {
      className: liClasses
    }, this.maybeRenderPopover(target, children));

    var _c, _d;
  };

  MenuItem.prototype.maybeRenderLabel = function (labelElement) {
    var _a = this.props,
        label = _a.label,
        labelClassName = _a.labelClassName;

    if (label == null && labelElement == null) {
      return null;
    }

    return $c384fc88c29a42758c0c493c6963826e$import$React.createElement("span", {
      className: $c384fc88c29a42758c0c493c6963826e$import$classNames($c384fc88c29a42758c0c493c6963826e$import$Classes.MENU_ITEM_LABEL, labelClassName)
    }, label, labelElement);
  };

  MenuItem.prototype.maybeRenderPopover = function (target, children) {
    if (children == null) {
      return target;
    }

    var _a = this.props,
        disabled = _a.disabled,
        popoverProps = _a.popoverProps;
    return $c384fc88c29a42758c0c493c6963826e$import$React.createElement($c384fc88c29a42758c0c493c6963826e$import$Popover, $c384fc88c29a42758c0c493c6963826e$import$tslib_1.__assign({
      autoFocus: false,
      captureDismiss: false,
      disabled: disabled,
      enforceFocus: false,
      hoverCloseDelay: 0,
      interactionKind: $c384fc88c29a42758c0c493c6963826e$import$PopoverInteractionKind.HOVER,
      modifiers: $c384fc88c29a42758c0c493c6963826e$var$SUBMENU_POPOVER_MODIFIERS,
      position: $c384fc88c29a42758c0c493c6963826e$import$Position.RIGHT_TOP,
      usePortal: false
    }, popoverProps, {
      content: $c384fc88c29a42758c0c493c6963826e$import$React.createElement($c384fc88c29a42758c0c493c6963826e$import$Menu, null, children),
      minimal: true,
      popoverClassName: $c384fc88c29a42758c0c493c6963826e$import$classNames($c384fc88c29a42758c0c493c6963826e$import$Classes.MENU_SUBMENU, popoverProps.popoverClassName),
      target: target
    }));
  };

  MenuItem.defaultProps = {
    disabled: false,
    multiline: false,
    popoverProps: {},
    shouldDismissPopover: true,
    text: ""
  };
  MenuItem.displayName = $c384fc88c29a42758c0c493c6963826e$import$DISPLAYNAME_PREFIX + ".MenuItem";
  return MenuItem;
}($c384fc88c29a42758c0c493c6963826e$import$React.PureComponent);

$c384fc88c29a42758c0c493c6963826e$exports.MenuItem = $c384fc88c29a42758c0c493c6963826e$export$MenuItem;
var $c384fc88c29a42758c0c493c6963826e$var$SUBMENU_POPOVER_MODIFIERS = {
  // 20px padding - scrollbar width + a bit
  flip: {
    boundariesElement: "viewport",
    padding: 20
  },
  // shift popover up 5px so MenuItems align
  offset: {
    offset: -5
  },
  preventOverflow: {
    boundariesElement: "viewport",
    padding: 20
  }
}; // props to ignore when disabled

var $c384fc88c29a42758c0c493c6963826e$var$DISABLED_PROPS = {
  href: undefined,
  onClick: undefined,
  onMouseDown: undefined,
  onMouseEnter: undefined,
  onMouseLeave: undefined,
  tabIndex: -1
}; //# sourceMappingURL=menuItem.js.map