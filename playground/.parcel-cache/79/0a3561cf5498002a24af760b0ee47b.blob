var $b35cfcec2ef5239c2667c0fa0c527992$exports = {};
$parcel$require("b35cfcec2ef5239c2667c0fa0c527992", "tslib");
$parcel$require("b35cfcec2ef5239c2667c0fa0c527992", "classnames");
$parcel$require("b35cfcec2ef5239c2667c0fa0c527992", "react");
$parcel$require("b35cfcec2ef5239c2667c0fa0c527992", "../../common/classes");
$parcel$require("b35cfcec2ef5239c2667c0fa0c527992", "../icon/icon");

// this component is simple enough that tests would be purely tautological.

/* istanbul ignore next */
var $b35cfcec2ef5239c2667c0fa0c527992$export$HTMLSelect =
/** @class */
function (_super) {
  $b35cfcec2ef5239c2667c0fa0c527992$import$tslib_1.__extends(HTMLSelect, _super);

  function HTMLSelect() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  HTMLSelect.prototype.render = function () {
    var _a = this.props,
        className = _a.className,
        disabled = _a.disabled,
        elementRef = _a.elementRef,
        fill = _a.fill,
        iconProps = _a.iconProps,
        large = _a.large,
        minimal = _a.minimal,
        _b = _a.options,
        options = _b === void 0 ? [] : _b,
        htmlProps = $b35cfcec2ef5239c2667c0fa0c527992$import$tslib_1.__rest(_a, ["className", "disabled", "elementRef", "fill", "iconProps", "large", "minimal", "options"]);

    var classes = $b35cfcec2ef5239c2667c0fa0c527992$import$classNames($b35cfcec2ef5239c2667c0fa0c527992$import$HTML_SELECT, (_c = {}, _c[$b35cfcec2ef5239c2667c0fa0c527992$import$DISABLED] = disabled, _c[$b35cfcec2ef5239c2667c0fa0c527992$import$FILL] = fill, _c[$b35cfcec2ef5239c2667c0fa0c527992$import$LARGE] = large, _c[$b35cfcec2ef5239c2667c0fa0c527992$import$MINIMAL] = minimal, _c), className);
    var optionChildren = options.map(function (option) {
      var props = typeof option === "object" ? option : {
        value: option
      };
      return $b35cfcec2ef5239c2667c0fa0c527992$import$React.createElement("option", $b35cfcec2ef5239c2667c0fa0c527992$import$tslib_1.__assign({}, props, {
        key: props.value,
        children: props.label || props.value
      }));
    });
    return $b35cfcec2ef5239c2667c0fa0c527992$import$React.createElement("div", {
      className: classes
    }, $b35cfcec2ef5239c2667c0fa0c527992$import$React.createElement("select", $b35cfcec2ef5239c2667c0fa0c527992$import$tslib_1.__assign({
      disabled: disabled,
      ref: elementRef
    }, htmlProps, {
      multiple: false
    }), optionChildren, htmlProps.children), $b35cfcec2ef5239c2667c0fa0c527992$import$React.createElement($b35cfcec2ef5239c2667c0fa0c527992$import$Icon, $b35cfcec2ef5239c2667c0fa0c527992$import$tslib_1.__assign({
      icon: "double-caret-vertical"
    }, iconProps)));

    var _c;
  };

  return HTMLSelect;
}($b35cfcec2ef5239c2667c0fa0c527992$import$React.PureComponent);

$b35cfcec2ef5239c2667c0fa0c527992$exports.HTMLSelect = $b35cfcec2ef5239c2667c0fa0c527992$export$HTMLSelect;