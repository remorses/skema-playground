var $e044d73aa1868ca90262ff87259237f$exports = {};
$parcel$require("6e044d73aa1868ca90262ff87259237f", "tslib");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "classnames");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "react");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "../../common");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "../../common/abstractPureComponent");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "../../common/errors");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "../../common/props");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "../../common/utils");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "./handle");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "./handleProps");
$parcel$require("6e044d73aa1868ca90262ff87259237f", "./sliderUtils");

/**
 * SFC used to pass slider handle props to a `MultiSlider`.
 * This element is not rendered directly.
 */
var $e044d73aa1868ca90262ff87259237f$var$MultiSliderHandle = function () {
  return null;
};

$e044d73aa1868ca90262ff87259237f$var$MultiSliderHandle.displayName = $e044d73aa1868ca90262ff87259237f$import$DISPLAYNAME_PREFIX + ".MultiSliderHandle";

var $e044d73aa1868ca90262ff87259237f$export$MultiSlider =
/** @class */
function (_super) {
  $e044d73aa1868ca90262ff87259237f$import$tslib_1.__extends(MultiSlider, _super);

  function MultiSlider() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.state = {
      labelPrecision: $e044d73aa1868ca90262ff87259237f$var$getLabelPrecision(_this.props),
      tickSize: 0,
      tickSizeRatio: 0
    };
    _this.handleElements = [];

    _this.addHandleRef = function (ref) {
      if (ref != null) {
        _this.handleElements.push(ref);
      }
    };

    _this.maybeHandleTrackClick = function (event) {
      if (_this.canHandleTrackEvent(event)) {
        var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
          return handle.mouseEventClientOffset(event);
        });

        if (foundHandle) {
          foundHandle.beginHandleMovement(event);
        }
      }
    };

    _this.maybeHandleTrackTouch = function (event) {
      if (_this.canHandleTrackEvent(event)) {
        var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
          return handle.touchEventClientOffset(event);
        });

        if (foundHandle) {
          foundHandle.beginHandleTouchMovement(event);
        }
      }
    };

    _this.canHandleTrackEvent = function (event) {
      var target = event.target; // ensure event does not come from inside the handle

      return !_this.props.disabled && target.closest("." + $e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER_HANDLE) == null;
    };

    _this.getHandlerForIndex = function (index, callback) {
      return function (newValue) {
        $e044d73aa1868ca90262ff87259237f$import$Utils.safeInvoke(callback, _this.getNewHandleValues(newValue, index));
      };
    };

    _this.handleChange = function (newValues) {
      var oldValues = _this.handleProps.map(function (handle) {
        return handle.value;
      });

      if (!$e044d73aa1868ca90262ff87259237f$import$Utils.arraysEqual(newValues, oldValues)) {
        $e044d73aa1868ca90262ff87259237f$import$Utils.safeInvoke(_this.props.onChange, newValues);

        _this.handleProps.forEach(function (handle, index) {
          if (oldValues[index] !== newValues[index]) {
            $e044d73aa1868ca90262ff87259237f$import$Utils.safeInvoke(handle.onChange, newValues[index]);
          }
        });
      }
    };

    _this.handleRelease = function (newValues) {
      $e044d73aa1868ca90262ff87259237f$import$Utils.safeInvoke(_this.props.onRelease, newValues);

      _this.handleProps.forEach(function (handle, index) {
        $e044d73aa1868ca90262ff87259237f$import$Utils.safeInvoke(handle.onRelease, newValues[index]);
      });
    };

    return _this;
  }

  MultiSlider.prototype.render = function () {
    var _this = this;

    var classes = $e044d73aa1868ca90262ff87259237f$import$classNames($e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER, (_a = {}, _a[$e044d73aa1868ca90262ff87259237f$import$Classes.DISABLED] = this.props.disabled, _a[$e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER + "-unlabeled"] = this.props.labelRenderer === false, _a[$e044d73aa1868ca90262ff87259237f$import$Classes.VERTICAL] = this.props.vertical, _a), this.props.className);
    return $e044d73aa1868ca90262ff87259237f$import$React.createElement("div", {
      className: classes,
      onMouseDown: this.maybeHandleTrackClick,
      onTouchStart: this.maybeHandleTrackTouch
    }, $e044d73aa1868ca90262ff87259237f$import$React.createElement("div", {
      className: $e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER_TRACK,
      ref: function (ref) {
        return _this.trackElement = ref;
      }
    }, this.renderTracks()), $e044d73aa1868ca90262ff87259237f$import$React.createElement("div", {
      className: $e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER_AXIS
    }, this.renderLabels()), this.renderHandles());

    var _a;
  };

  MultiSlider.prototype.componentWillMount = function () {
    this.handleProps = $e044d73aa1868ca90262ff87259237f$var$getSortedInteractiveHandleProps(this.props);
  };

  MultiSlider.prototype.componentDidMount = function () {
    this.updateTickSize();
  };

  MultiSlider.prototype.componentDidUpdate = function () {
    this.updateTickSize();
  };

  MultiSlider.prototype.componentWillReceiveProps = function (nextProps) {
    this.setState({
      labelPrecision: this.getLabelPrecision(nextProps)
    });
    var newHandleProps = $e044d73aa1868ca90262ff87259237f$var$getSortedInteractiveHandleProps(nextProps);

    if (newHandleProps.length !== this.handleProps.length) {
      this.handleElements = [];
    }

    this.handleProps = newHandleProps;
  };

  MultiSlider.prototype.validateProps = function (props) {
    if (props.stepSize <= 0) {
      throw new Error($e044d73aa1868ca90262ff87259237f$import$Errors.SLIDER_ZERO_STEP);
    }

    if (props.labelStepSize <= 0) {
      throw new Error($e044d73aa1868ca90262ff87259237f$import$Errors.SLIDER_ZERO_LABEL_STEP);
    }

    var anyInvalidChildren = false;
    $e044d73aa1868ca90262ff87259237f$import$React.Children.forEach(props.children, function (child) {
      // allow boolean coercion to omit nulls and false values
      if (child && !$e044d73aa1868ca90262ff87259237f$import$Utils.isElementOfType(child, MultiSlider.Handle)) {
        anyInvalidChildren = true;
      }
    });

    if (anyInvalidChildren) {
      throw new Error($e044d73aa1868ca90262ff87259237f$import$Errors.MULTISLIDER_INVALID_CHILD);
    }
  };

  MultiSlider.prototype.formatLabel = function (value) {
    var labelRenderer = this.props.labelRenderer;

    if (labelRenderer === false) {
      return null;
    } else if ($e044d73aa1868ca90262ff87259237f$import$Utils.isFunction(labelRenderer)) {
      return labelRenderer(value);
    } else {
      return value.toFixed(this.state.labelPrecision);
    }
  };

  MultiSlider.prototype.renderLabels = function () {
    if (this.props.labelRenderer === false) {
      return null;
    }

    var _a = this.props,
        labelStepSize = _a.labelStepSize,
        max = _a.max,
        min = _a.min;
    var labels = [];
    var stepSizeRatio = this.state.tickSizeRatio * labelStepSize; // step size lends itself naturally to a `for` loop
    // tslint:disable-next-line:one-variable-per-declaration ban-comma-operator

    for (var i = min, offsetRatio = 0; i < max || $e044d73aa1868ca90262ff87259237f$import$Utils.approxEqual(i, max); i += labelStepSize, offsetRatio += stepSizeRatio) {
      var offsetPercentage = $e044d73aa1868ca90262ff87259237f$import$formatPercentage(offsetRatio);
      var style = this.props.vertical ? {
        bottom: offsetPercentage
      } : {
        left: offsetPercentage
      };
      labels.push($e044d73aa1868ca90262ff87259237f$import$React.createElement("div", {
        className: $e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER_LABEL,
        key: i,
        style: style
      }, this.formatLabel(i)));
    }

    return labels;
  };

  MultiSlider.prototype.renderTracks = function () {
    var trackStops = $e044d73aa1868ca90262ff87259237f$var$getSortedHandleProps(this.props);
    trackStops.push({
      value: this.props.max
    }); // render from current to previous, then increment previous

    var previous = {
      value: this.props.min
    };
    var handles = [];

    for (var index = 0; index < trackStops.length; index++) {
      var current = trackStops[index];
      handles.push(this.renderTrackFill(index, previous, current));
      previous = current;
    }

    return handles;
  };

  MultiSlider.prototype.renderTrackFill = function (index, start, end) {
    // ensure startRatio <= endRatio
    var _a = [this.getOffsetRatio(start.value), this.getOffsetRatio(end.value)].sort(),
        startRatio = _a[0],
        endRatio = _a[1];

    var startOffset = $e044d73aa1868ca90262ff87259237f$import$formatPercentage(startRatio);
    var endOffset = $e044d73aa1868ca90262ff87259237f$import$formatPercentage(1 - endRatio);
    var style = this.props.vertical ? {
      bottom: startOffset,
      top: endOffset,
      left: 0
    } : {
      left: startOffset,
      right: endOffset,
      top: 0
    };
    var classes = $e044d73aa1868ca90262ff87259237f$import$classNames($e044d73aa1868ca90262ff87259237f$import$Classes.SLIDER_PROGRESS, $e044d73aa1868ca90262ff87259237f$import$Classes.intentClass(this.getTrackIntent(start, end)));
    return $e044d73aa1868ca90262ff87259237f$import$React.createElement("div", {
      key: "track-" + index,
      className: classes,
      style: style
    });
  };

  MultiSlider.prototype.renderHandles = function () {
    var _this = this;

    var _a = this.props,
        disabled = _a.disabled,
        max = _a.max,
        min = _a.min,
        stepSize = _a.stepSize,
        vertical = _a.vertical;
    return this.handleProps.map(function (_a, index) {
      var value = _a.value,
          type = _a.type;
      return $e044d73aa1868ca90262ff87259237f$import$React.createElement($e044d73aa1868ca90262ff87259237f$import$Handle, {
        className: $e044d73aa1868ca90262ff87259237f$import$classNames((_b = {}, _b[$e044d73aa1868ca90262ff87259237f$import$Classes.START] = type === $e044d73aa1868ca90262ff87259237f$import$HandleType.START, _b[$e044d73aa1868ca90262ff87259237f$import$Classes.END] = type === $e044d73aa1868ca90262ff87259237f$import$HandleType.END, _b)),
        disabled: disabled,
        key: index + "-" + _this.handleProps.length,
        label: _this.formatLabel(value),
        max: max,
        min: min,
        onChange: _this.getHandlerForIndex(index, _this.handleChange),
        onRelease: _this.getHandlerForIndex(index, _this.handleRelease),
        ref: _this.addHandleRef,
        stepSize: stepSize,
        tickSize: _this.state.tickSize,
        tickSizeRatio: _this.state.tickSizeRatio,
        value: value,
        vertical: vertical
      });

      var _b;
    });
  };

  MultiSlider.prototype.nearestHandleForValue = function (handles, getOffset) {
    return $e044d73aa1868ca90262ff87259237f$import$argMin(handles, function (handle) {
      var offset = getOffset(handle);
      var offsetValue = handle.clientToValue(offset);
      var handleValue = handle.props.value;
      return Math.abs(offsetValue - handleValue);
    });
  };

  MultiSlider.prototype.getNewHandleValues = function (newValue, oldIndex) {
    var oldValues = this.handleProps.map(function (handle) {
      return handle.value;
    });
    var newValues = oldValues.slice();
    newValues[oldIndex] = newValue;
    newValues.sort(function (left, right) {
      return left - right;
    });
    var newIndex = newValues.indexOf(newValue);
    var lockIndex = this.findFirstLockedHandleIndex(oldIndex, newIndex);

    if (lockIndex === -1) {
      $e044d73aa1868ca90262ff87259237f$import$fillValues(newValues, oldIndex, newIndex, newValue);
    } else {
      // If pushing past a locked handle, discard the new value and only make the updates to clamp values against the lock.
      var lockValue = oldValues[lockIndex];
      $e044d73aa1868ca90262ff87259237f$import$fillValues(oldValues, oldIndex, lockIndex, lockValue);
      return oldValues;
    }

    return newValues;
  };

  MultiSlider.prototype.findFirstLockedHandleIndex = function (startIndex, endIndex) {
    var inc = startIndex < endIndex ? 1 : -1;

    for (var index = startIndex + inc; index !== endIndex + inc; index += inc) {
      if (this.handleProps[index].interactionKind !== $e044d73aa1868ca90262ff87259237f$import$HandleInteractionKind.PUSH) {
        return index;
      }
    }

    return -1;
  };

  MultiSlider.prototype.getLabelPrecision = function (_a) {
    var labelPrecision = _a.labelPrecision,
        stepSize = _a.stepSize; // infer default label precision from stepSize because that's how much the handle moves.

    return labelPrecision == null ? $e044d73aa1868ca90262ff87259237f$import$Utils.countDecimalPlaces(stepSize) : labelPrecision;
  };

  MultiSlider.prototype.getOffsetRatio = function (value) {
    return $e044d73aa1868ca90262ff87259237f$import$Utils.clamp((value - this.props.min) * this.state.tickSizeRatio, 0, 1);
  };

  MultiSlider.prototype.getTrackIntent = function (start, end) {
    if (!this.props.showTrackFill) {
      return $e044d73aa1868ca90262ff87259237f$import$Intent.NONE;
    }

    if (start.intentAfter !== undefined) {
      return start.intentAfter;
    } else if (end !== undefined && end.intentBefore !== undefined) {
      return end.intentBefore;
    }

    return this.props.defaultTrackIntent;
  };

  MultiSlider.prototype.updateTickSize = function () {
    if (this.trackElement != null) {
      var trackSize = this.props.vertical ? this.trackElement.clientHeight : this.trackElement.clientWidth;
      var tickSizeRatio = 1 / (this.props.max - this.props.min);
      var tickSize = trackSize * tickSizeRatio;
      this.setState({
        tickSize: tickSize,
        tickSizeRatio: tickSizeRatio
      });
    }
  };

  MultiSlider.defaultSliderProps = {
    disabled: false,
    labelStepSize: 1,
    max: 10,
    min: 0,
    showTrackFill: true,
    stepSize: 1,
    vertical: false
  };
  MultiSlider.defaultProps = $e044d73aa1868ca90262ff87259237f$import$tslib_1.__assign({}, MultiSlider.defaultSliderProps, {
    defaultTrackIntent: $e044d73aa1868ca90262ff87259237f$import$Intent.NONE
  });
  MultiSlider.displayName = $e044d73aa1868ca90262ff87259237f$import$DISPLAYNAME_PREFIX + ".MultiSlider";
  MultiSlider.Handle = $e044d73aa1868ca90262ff87259237f$var$MultiSliderHandle;
  return MultiSlider;
}($e044d73aa1868ca90262ff87259237f$import$AbstractPureComponent);

$e044d73aa1868ca90262ff87259237f$exports.MultiSlider = $e044d73aa1868ca90262ff87259237f$export$MultiSlider;

function $e044d73aa1868ca90262ff87259237f$var$getLabelPrecision(_a) {
  var labelPrecision = _a.labelPrecision,
      stepSize = _a.stepSize; // infer default label precision from stepSize because that's how much the handle moves.

  return labelPrecision == null ? $e044d73aa1868ca90262ff87259237f$import$Utils.countDecimalPlaces(stepSize) : labelPrecision;
}

function $e044d73aa1868ca90262ff87259237f$var$getSortedInteractiveHandleProps(props) {
  return $e044d73aa1868ca90262ff87259237f$var$getSortedHandleProps(props, function (childProps) {
    return childProps.interactionKind !== $e044d73aa1868ca90262ff87259237f$import$HandleInteractionKind.NONE;
  });
}

function $e044d73aa1868ca90262ff87259237f$var$getSortedHandleProps(_a, predicate) {
  var children = _a.children;

  if (predicate === void 0) {
    predicate = function () {
      return true;
    };
  }

  var maybeHandles = $e044d73aa1868ca90262ff87259237f$import$React.Children.map(children, function (child) {
    return $e044d73aa1868ca90262ff87259237f$import$Utils.isElementOfType(child, $e044d73aa1868ca90262ff87259237f$export$MultiSlider.Handle) && predicate(child.props) ? child.props : null;
  });
  var handles = maybeHandles != null ? maybeHandles : [];
  handles = handles.filter(function (handle) {
    return handle !== null;
  });
  handles.sort(function (left, right) {
    return left.value - right.value;
  });
  return handles;
} //# sourceMappingURL=multiSlider.js.map