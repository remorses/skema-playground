var $a207e1b3bbabf6e36b092859f8a685e7$exports = {};
$parcel$require("a207e1b3bbabf6e36b092859f8a685e7", "tslib");
$parcel$require("a207e1b3bbabf6e36b092859f8a685e7", "graphql/language/printer");
$parcel$require("a207e1b3bbabf6e36b092859f8a685e7", "ts-invariant");
var $a207e1b3bbabf6e36b092859f8a685e7$var$defaultHttpOptions = {
  includeQuery: true,
  includeExtensions: false
};
var $a207e1b3bbabf6e36b092859f8a685e7$var$defaultHeaders = {
  accept: '*/*',
  'content-type': 'application/json'
};
var $a207e1b3bbabf6e36b092859f8a685e7$var$defaultOptions = {
  method: 'POST'
};
var $a207e1b3bbabf6e36b092859f8a685e7$export$fallbackHttpConfig = {
  http: $a207e1b3bbabf6e36b092859f8a685e7$var$defaultHttpOptions,
  headers: $a207e1b3bbabf6e36b092859f8a685e7$var$defaultHeaders,
  options: $a207e1b3bbabf6e36b092859f8a685e7$var$defaultOptions
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$throwServerError = function (response, result, message) {
  var error = new Error(message);
  error.name = 'ServerError';
  error.response = response;
  error.statusCode = response.status;
  error.result = result;
  throw error;
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$parseAndCheckHttpResponse = function (operations) {
  return function (response) {
    return response.text().then(function (bodyText) {
      try {
        return JSON.parse(bodyText);
      } catch (err) {
        var parseError = err;
        parseError.name = 'ServerParseError';
        parseError.response = response;
        parseError.statusCode = response.status;
        parseError.bodyText = bodyText;
        return Promise.reject(parseError);
      }
    }).then(function (result) {
      if (response.status >= 300) {
        $a207e1b3bbabf6e36b092859f8a685e7$export$throwServerError(response, result, "Response not successful: Received status code " + response.status);
      }

      if (!Array.isArray(result) && !result.hasOwnProperty('data') && !result.hasOwnProperty('errors')) {
        $a207e1b3bbabf6e36b092859f8a685e7$export$throwServerError(response, result, "Server response was missing for query '" + (Array.isArray(operations) ? operations.map(function (op) {
          return op.operationName;
        }) : operations.operationName) + "'.");
      }

      return result;
    });
  };
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$checkFetcher = function (fetcher) {
  if (!fetcher && typeof fetch === 'undefined') {
    var library = 'unfetch';
    if (typeof window === 'undefined') library = 'node-fetch';
    throw "production" === "production" ? new $a207e1b3bbabf6e36b092859f8a685e7$import$InvariantError(1) : new $a207e1b3bbabf6e36b092859f8a685e7$import$InvariantError("\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/" + library + ".\n\nFor example:\nimport fetch from '" + library + "';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });");
  }
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$createSignalIfSupported = function () {
  if (typeof AbortController === 'undefined') return {
    controller: false,
    signal: false
  };
  var controller = new AbortController();
  var signal = controller.signal;
  return {
    controller: controller,
    signal: signal
  };
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$selectHttpOptionsAndBody = function (operation, fallbackConfig) {
  var configs = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    configs[_i - 2] = arguments[_i];
  }

  var options = $a207e1b3bbabf6e36b092859f8a685e7$import$__assign({}, fallbackConfig.options, {
    headers: fallbackConfig.headers,
    credentials: fallbackConfig.credentials
  });
  var http = fallbackConfig.http;
  configs.forEach(function (config) {
    options = $a207e1b3bbabf6e36b092859f8a685e7$import$__assign({}, options, config.options, {
      headers: $a207e1b3bbabf6e36b092859f8a685e7$import$__assign({}, options.headers, config.headers)
    });
    if (config.credentials) options.credentials = config.credentials;
    http = $a207e1b3bbabf6e36b092859f8a685e7$import$__assign({}, http, config.http);
  });
  var operationName = operation.operationName,
      extensions = operation.extensions,
      variables = operation.variables,
      query = operation.query;
  var body = {
    operationName: operationName,
    variables: variables
  };
  if (http.includeExtensions) body.extensions = extensions;
  if (http.includeQuery) body.query = $a207e1b3bbabf6e36b092859f8a685e7$import$print(query);
  return {
    options: options,
    body: body
  };
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$serializeFetchParameter = function (p, label) {
  var serialized;

  try {
    serialized = JSON.stringify(p);
  } catch (e) {
    var parseError = "production" === "production" ? new $a207e1b3bbabf6e36b092859f8a685e7$import$InvariantError(2) : new $a207e1b3bbabf6e36b092859f8a685e7$import$InvariantError("Network request failed. " + label + " is not serializable: " + e.message);
    parseError.parseError = e;
    throw parseError;
  }

  return serialized;
};

var $a207e1b3bbabf6e36b092859f8a685e7$export$selectURI = function (operation, fallbackURI) {
  var context = operation.getContext();
  var contextURI = context.uri;

  if (contextURI) {
    return contextURI;
  } else if (typeof fallbackURI === 'function') {
    return fallbackURI(operation);
  } else {
    return fallbackURI || '/graphql';
  }
};

$a207e1b3bbabf6e36b092859f8a685e7$exports.throwServerError = $a207e1b3bbabf6e36b092859f8a685e7$export$throwServerError;
$a207e1b3bbabf6e36b092859f8a685e7$exports.serializeFetchParameter = $a207e1b3bbabf6e36b092859f8a685e7$export$serializeFetchParameter;
$a207e1b3bbabf6e36b092859f8a685e7$exports.selectURI = $a207e1b3bbabf6e36b092859f8a685e7$export$selectURI;
$a207e1b3bbabf6e36b092859f8a685e7$exports.selectHttpOptionsAndBody = $a207e1b3bbabf6e36b092859f8a685e7$export$selectHttpOptionsAndBody;
$a207e1b3bbabf6e36b092859f8a685e7$exports.parseAndCheckHttpResponse = $a207e1b3bbabf6e36b092859f8a685e7$export$parseAndCheckHttpResponse;
$a207e1b3bbabf6e36b092859f8a685e7$exports.fallbackHttpConfig = $a207e1b3bbabf6e36b092859f8a685e7$export$fallbackHttpConfig;
$a207e1b3bbabf6e36b092859f8a685e7$exports.createSignalIfSupported = $a207e1b3bbabf6e36b092859f8a685e7$export$createSignalIfSupported;
$a207e1b3bbabf6e36b092859f8a685e7$exports.checkFetcher = $a207e1b3bbabf6e36b092859f8a685e7$export$checkFetcher;