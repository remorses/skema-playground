var $e17dfaa1c5447571e7952130f79531c9$exports = {};
$e17dfaa1c5447571e7952130f79531c9$exports = {
  copy: $e17dfaa1c5447571e7952130f79531c9$var$copy,
  checkDataType: $e17dfaa1c5447571e7952130f79531c9$var$checkDataType,
  checkDataTypes: $e17dfaa1c5447571e7952130f79531c9$var$checkDataTypes,
  coerceToTypes: $e17dfaa1c5447571e7952130f79531c9$var$coerceToTypes,
  toHash: $e17dfaa1c5447571e7952130f79531c9$var$toHash,
  getProperty: $e17dfaa1c5447571e7952130f79531c9$var$getProperty,
  escapeQuotes: $e17dfaa1c5447571e7952130f79531c9$var$escapeQuotes,
  equal: $parcel$require("e17dfaa1c5447571e7952130f79531c9", "fast-deep-equal"),
  ucs2length: $parcel$require("e17dfaa1c5447571e7952130f79531c9", "./ucs2length"),
  varOccurences: $e17dfaa1c5447571e7952130f79531c9$var$varOccurences,
  varReplace: $e17dfaa1c5447571e7952130f79531c9$var$varReplace,
  cleanUpCode: $e17dfaa1c5447571e7952130f79531c9$var$cleanUpCode,
  finalCleanUpCode: $e17dfaa1c5447571e7952130f79531c9$var$finalCleanUpCode,
  schemaHasRules: $e17dfaa1c5447571e7952130f79531c9$var$schemaHasRules,
  schemaHasRulesExcept: $e17dfaa1c5447571e7952130f79531c9$var$schemaHasRulesExcept,
  schemaUnknownRules: $e17dfaa1c5447571e7952130f79531c9$var$schemaUnknownRules,
  toQuotedString: $e17dfaa1c5447571e7952130f79531c9$var$toQuotedString,
  getPathExpr: $e17dfaa1c5447571e7952130f79531c9$var$getPathExpr,
  getPath: $e17dfaa1c5447571e7952130f79531c9$var$getPath,
  getData: $e17dfaa1c5447571e7952130f79531c9$var$getData,
  unescapeFragment: $e17dfaa1c5447571e7952130f79531c9$var$unescapeFragment,
  unescapeJsonPointer: $e17dfaa1c5447571e7952130f79531c9$var$unescapeJsonPointer,
  escapeFragment: $e17dfaa1c5447571e7952130f79531c9$var$escapeFragment,
  escapeJsonPointer: $e17dfaa1c5447571e7952130f79531c9$var$escapeJsonPointer
};

function $e17dfaa1c5447571e7952130f79531c9$var$copy(o, to) {
  to = to || {};

  for (var key in o) to[key] = o[key];

  return to;
}

function $e17dfaa1c5447571e7952130f79531c9$var$checkDataType(dataType, data, negate) {
  var EQUAL = negate ? ' !== ' : ' === ',
      AND = negate ? ' || ' : ' && ',
      OK = negate ? '!' : '',
      NOT = negate ? '' : '!';

  switch (dataType) {
    case 'null':
      return data + EQUAL + 'null';

    case 'array':
      return OK + 'Array.isArray(' + data + ')';

    case 'object':
      return '(' + OK + data + AND + 'typeof ' + data + EQUAL + '"object"' + AND + NOT + 'Array.isArray(' + data + '))';

    case 'integer':
      return '(typeof ' + data + EQUAL + '"number"' + AND + NOT + '(' + data + ' % 1)' + AND + data + EQUAL + data + ')';

    default:
      return 'typeof ' + data + EQUAL + '"' + dataType + '"';
  }
}

function $e17dfaa1c5447571e7952130f79531c9$var$checkDataTypes(dataTypes, data) {
  switch (dataTypes.length) {
    case 1:
      return $e17dfaa1c5447571e7952130f79531c9$var$checkDataType(dataTypes[0], data, true);

    default:
      var code = '';
      var types = $e17dfaa1c5447571e7952130f79531c9$var$toHash(dataTypes);

      if (types.array && types.object) {
        code = types.null ? '(' : '(!' + data + ' || ';
        code += 'typeof ' + data + ' !== "object")';
        delete types.null;
        delete types.array;
        delete types.object;
      }

      if (types.number) delete types.integer;

      for (var t in types) code += (code ? ' && ' : '') + $e17dfaa1c5447571e7952130f79531c9$var$checkDataType(t, data, true);

      return code;
  }
}

var $e17dfaa1c5447571e7952130f79531c9$var$COERCE_TO_TYPES = $e17dfaa1c5447571e7952130f79531c9$var$toHash(['string', 'number', 'integer', 'boolean', 'null']);

function $e17dfaa1c5447571e7952130f79531c9$var$coerceToTypes(optionCoerceTypes, dataTypes) {
  if (Array.isArray(dataTypes)) {
    var types = [];

    for (var i = 0; i < dataTypes.length; i++) {
      var t = dataTypes[i];
      if ($e17dfaa1c5447571e7952130f79531c9$var$COERCE_TO_TYPES[t]) types[types.length] = t;else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;
    }

    if (types.length) return types;
  } else if ($e17dfaa1c5447571e7952130f79531c9$var$COERCE_TO_TYPES[dataTypes]) {
    return [dataTypes];
  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {
    return ['array'];
  }
}

function $e17dfaa1c5447571e7952130f79531c9$var$toHash(arr) {
  var hash = {};

  for (var i = 0; i < arr.length; i++) hash[arr[i]] = true;

  return hash;
}

var $e17dfaa1c5447571e7952130f79531c9$var$IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
var $e17dfaa1c5447571e7952130f79531c9$var$SINGLE_QUOTE = /'|\\/g;

function $e17dfaa1c5447571e7952130f79531c9$var$getProperty(key) {
  return typeof key == 'number' ? '[' + key + ']' : $e17dfaa1c5447571e7952130f79531c9$var$IDENTIFIER.test(key) ? '.' + key : "['" + $e17dfaa1c5447571e7952130f79531c9$var$escapeQuotes(key) + "']";
}

function $e17dfaa1c5447571e7952130f79531c9$var$escapeQuotes(str) {
  return str.replace($e17dfaa1c5447571e7952130f79531c9$var$SINGLE_QUOTE, '\\$&').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\f/g, '\\f').replace(/\t/g, '\\t');
}

function $e17dfaa1c5447571e7952130f79531c9$var$varOccurences(str, dataVar) {
  dataVar += '[^0-9]';
  var matches = str.match(new RegExp(dataVar, 'g'));
  return matches ? matches.length : 0;
}

function $e17dfaa1c5447571e7952130f79531c9$var$varReplace(str, dataVar, expr) {
  dataVar += '([^0-9])';
  expr = expr.replace(/\$/g, '$$$$');
  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');
}

var $e17dfaa1c5447571e7952130f79531c9$var$EMPTY_ELSE = /else\s*{\s*}/g,
    $e17dfaa1c5447571e7952130f79531c9$var$EMPTY_IF_NO_ELSE = /if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g,
    $e17dfaa1c5447571e7952130f79531c9$var$EMPTY_IF_WITH_ELSE = /if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;

function $e17dfaa1c5447571e7952130f79531c9$var$cleanUpCode(out) {
  return out.replace($e17dfaa1c5447571e7952130f79531c9$var$EMPTY_ELSE, '').replace($e17dfaa1c5447571e7952130f79531c9$var$EMPTY_IF_NO_ELSE, '').replace($e17dfaa1c5447571e7952130f79531c9$var$EMPTY_IF_WITH_ELSE, 'if (!($1))');
}

var $e17dfaa1c5447571e7952130f79531c9$var$ERRORS_REGEXP = /[^v.]errors/g,
    $e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,
    $e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g,
    $e17dfaa1c5447571e7952130f79531c9$var$RETURN_VALID = 'return errors === 0;',
    $e17dfaa1c5447571e7952130f79531c9$var$RETURN_TRUE = 'validate.errors = null; return true;',
    $e17dfaa1c5447571e7952130f79531c9$var$RETURN_ASYNC = /if \(errors === 0\) return data;\s*else throw new ValidationError\(vErrors\);/,
    $e17dfaa1c5447571e7952130f79531c9$var$RETURN_DATA_ASYNC = 'return data;',
    $e17dfaa1c5447571e7952130f79531c9$var$ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g,
    $e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ROOTDATA = /if \(rootData === undefined\) rootData = data;/;

function $e17dfaa1c5447571e7952130f79531c9$var$finalCleanUpCode(out, async) {
  var matches = out.match($e17dfaa1c5447571e7952130f79531c9$var$ERRORS_REGEXP);

  if (matches && matches.length == 2) {
    out = async ? out.replace($e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ERRORS_ASYNC, '').replace($e17dfaa1c5447571e7952130f79531c9$var$RETURN_ASYNC, $e17dfaa1c5447571e7952130f79531c9$var$RETURN_DATA_ASYNC) : out.replace($e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ERRORS, '').replace($e17dfaa1c5447571e7952130f79531c9$var$RETURN_VALID, $e17dfaa1c5447571e7952130f79531c9$var$RETURN_TRUE);
  }

  matches = out.match($e17dfaa1c5447571e7952130f79531c9$var$ROOTDATA_REGEXP);
  if (!matches || matches.length !== 3) return out;
  return out.replace($e17dfaa1c5447571e7952130f79531c9$var$REMOVE_ROOTDATA, '');
}

function $e17dfaa1c5447571e7952130f79531c9$var$schemaHasRules(schema, rules) {
  if (typeof schema == 'boolean') return !schema;

  for (var key in schema) if (rules[key]) return true;
}

function $e17dfaa1c5447571e7952130f79531c9$var$schemaHasRulesExcept(schema, rules, exceptKeyword) {
  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';

  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;
}

function $e17dfaa1c5447571e7952130f79531c9$var$schemaUnknownRules(schema, rules) {
  if (typeof schema == 'boolean') return;

  for (var key in schema) if (!rules[key]) return key;
}

function $e17dfaa1c5447571e7952130f79531c9$var$toQuotedString(str) {
  return '\'' + $e17dfaa1c5447571e7952130f79531c9$var$escapeQuotes(str) + '\'';
}

function $e17dfaa1c5447571e7952130f79531c9$var$getPathExpr(currentPath, expr, jsonPointers, isNumber) {
  var path = jsonPointers // false by default
  ? '\'/\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \'~0\').replace(/\\//g, \'~1\')') : isNumber ? '\'[\' + ' + expr + ' + \']\'' : '\'[\\\'\' + ' + expr + ' + \'\\\']\'';
  return $e17dfaa1c5447571e7952130f79531c9$var$joinPaths(currentPath, path);
}

function $e17dfaa1c5447571e7952130f79531c9$var$getPath(currentPath, prop, jsonPointers) {
  var path = jsonPointers // false by default
  ? $e17dfaa1c5447571e7952130f79531c9$var$toQuotedString('/' + $e17dfaa1c5447571e7952130f79531c9$var$escapeJsonPointer(prop)) : $e17dfaa1c5447571e7952130f79531c9$var$toQuotedString($e17dfaa1c5447571e7952130f79531c9$var$getProperty(prop));
  return $e17dfaa1c5447571e7952130f79531c9$var$joinPaths(currentPath, path);
}

var $e17dfaa1c5447571e7952130f79531c9$var$JSON_POINTER = /^\/(?:[^~]|~0|~1)*$/;
var $e17dfaa1c5447571e7952130f79531c9$var$RELATIVE_JSON_POINTER = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;

function $e17dfaa1c5447571e7952130f79531c9$var$getData($data, lvl, paths) {
  var up, jsonPointer, data, matches;
  if ($data === '') return 'rootData';

  if ($data[0] == '/') {
    if (!$e17dfaa1c5447571e7952130f79531c9$var$JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);
    jsonPointer = $data;
    data = 'rootData';
  } else {
    matches = $data.match($e17dfaa1c5447571e7952130f79531c9$var$RELATIVE_JSON_POINTER);
    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);
    up = +matches[1];
    jsonPointer = matches[2];

    if (jsonPointer == '#') {
      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);
      return paths[lvl - up];
    }

    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);
    data = 'data' + (lvl - up || '');
    if (!jsonPointer) return data;
  }

  var expr = data;
  var segments = jsonPointer.split('/');

  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];

    if (segment) {
      data += $e17dfaa1c5447571e7952130f79531c9$var$getProperty($e17dfaa1c5447571e7952130f79531c9$var$unescapeJsonPointer(segment));
      expr += ' && ' + data;
    }
  }

  return expr;
}

function $e17dfaa1c5447571e7952130f79531c9$var$joinPaths(a, b) {
  if (a == '""') return b;
  return (a + ' + ' + b).replace(/' \+ '/g, '');
}

function $e17dfaa1c5447571e7952130f79531c9$var$unescapeFragment(str) {
  return $e17dfaa1c5447571e7952130f79531c9$var$unescapeJsonPointer(decodeURIComponent(str));
}

function $e17dfaa1c5447571e7952130f79531c9$var$escapeFragment(str) {
  return encodeURIComponent($e17dfaa1c5447571e7952130f79531c9$var$escapeJsonPointer(str));
}

function $e17dfaa1c5447571e7952130f79531c9$var$escapeJsonPointer(str) {
  return str.replace(/~/g, '~0').replace(/\//g, '~1');
}

function $e17dfaa1c5447571e7952130f79531c9$var$unescapeJsonPointer(str) {
  return str.replace(/~1/g, '/').replace(/~0/g, '~');
}