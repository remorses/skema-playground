var $c2ccb7543f2fda23f81001fb5ae$exports = {};

var $c2ccb7543f2fda23f81001fb5ae$var$__extends = $c2ccb7543f2fda23f81001fb5ae$exports && $c2ccb7543f2fda23f81001fb5ae$exports.__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var $c2ccb7543f2fda23f81001fb5ae$var$__assign = $c2ccb7543f2fda23f81001fb5ae$exports && $c2ccb7543f2fda23f81001fb5ae$exports.__assign || function () {
  $c2ccb7543f2fda23f81001fb5ae$var$__assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return $c2ccb7543f2fda23f81001fb5ae$var$__assign.apply(this, arguments);
};

Object.defineProperty($c2ccb7543f2fda23f81001fb5ae$exports, "__esModule", {
  value: true
});
var $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1 = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "./editorOptions");
var $c2ccb7543f2fda23f81001fb5ae$var$ace = $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.getAceInstance();
var $c2ccb7543f2fda23f81001fb5ae$var$ace_builds_1 = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "ace-builds");
var $c2ccb7543f2fda23f81001fb5ae$var$ext_split_1 = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "ace-builds/src-noconflict/ext-split");
var $c2ccb7543f2fda23f81001fb5ae$var$PropTypes = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "prop-types");
var $c2ccb7543f2fda23f81001fb5ae$var$React = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "react");
var $c2ccb7543f2fda23f81001fb5ae$var$isEqual = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "lodash.isequal");
var $c2ccb7543f2fda23f81001fb5ae$var$get = $parcel$require("21705c2ccb7543f2fda23f81001fb5ae", "lodash.get");

var $c2ccb7543f2fda23f81001fb5ae$var$SplitComponent =
/** @class */
function (_super) {
  $c2ccb7543f2fda23f81001fb5ae$var$__extends(SplitComponent, _super);

  function SplitComponent(props) {
    var _this = _super.call(this, props) || this;

    $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.editorEvents.forEach(function (method) {
      _this[method] = _this[method].bind(_this);
    });
    _this.debounce = $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.debounce;
    return _this;
  }

  SplitComponent.prototype.componentDidMount = function () {
    var _this = this;

    var _a = this.props,
        className = _a.className,
        onBeforeLoad = _a.onBeforeLoad,
        mode = _a.mode,
        focus = _a.focus,
        theme = _a.theme,
        fontSize = _a.fontSize,
        value = _a.value,
        defaultValue = _a.defaultValue,
        cursorStart = _a.cursorStart,
        showGutter = _a.showGutter,
        wrapEnabled = _a.wrapEnabled,
        showPrintMargin = _a.showPrintMargin,
        _b = _a.scrollMargin,
        scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,
        keyboardHandler = _a.keyboardHandler,
        onLoad = _a.onLoad,
        commands = _a.commands,
        annotations = _a.annotations,
        markers = _a.markers,
        splits = _a.splits;
    this.editor = $c2ccb7543f2fda23f81001fb5ae$var$ace.edit(this.refEditor);

    if (onBeforeLoad) {
      onBeforeLoad($c2ccb7543f2fda23f81001fb5ae$var$ace);
    }

    var editorProps = Object.keys(this.props.editorProps);
    var split = new $c2ccb7543f2fda23f81001fb5ae$var$ext_split_1.Split(this.editor.container, "ace/theme/" + theme, splits);
    this.editor.env.split = split;
    this.splitEditor = split.getEditor(0);
    this.split = split; // in a split scenario we don't want a print margin for the entire application

    this.editor.setShowPrintMargin(false);
    this.editor.renderer.setShowGutter(false); // get a list of possible options to avoid 'misspelled option errors'

    var availableOptions = this.splitEditor.$options;

    if (this.props.debounceChangePeriod) {
      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);
    }

    split.forEach(function (editor, index) {
      for (var i = 0; i < editorProps.length; i++) {
        editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];
      }

      var defaultValueForEditor = $c2ccb7543f2fda23f81001fb5ae$var$get(defaultValue, index);
      var valueForEditor = $c2ccb7543f2fda23f81001fb5ae$var$get(value, index, "");
      editor.session.setUndoManager(new $c2ccb7543f2fda23f81001fb5ae$var$ace.UndoManager());
      editor.setTheme("ace/theme/" + theme);
      editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);
      editor.getSession().setMode("ace/mode/" + mode);
      editor.setFontSize(fontSize);
      editor.renderer.setShowGutter(showGutter);
      editor.getSession().setUseWrapMode(wrapEnabled);
      editor.setShowPrintMargin(showPrintMargin);
      editor.on("focus", _this.onFocus);
      editor.on("blur", _this.onBlur);
      editor.on("input", _this.onInput);
      editor.on("copy", _this.onCopy);
      editor.on("paste", _this.onPaste);
      editor.on("change", _this.onChange);
      editor.getSession().selection.on("changeSelection", _this.onSelectionChange);
      editor.getSession().selection.on("changeCursor", _this.onCursorChange);
      editor.session.on("changeScrollTop", _this.onScroll);
      editor.setValue(defaultValueForEditor === undefined ? valueForEditor : defaultValueForEditor, cursorStart);
      var newAnnotations = $c2ccb7543f2fda23f81001fb5ae$var$get(annotations, index, []);
      var newMarkers = $c2ccb7543f2fda23f81001fb5ae$var$get(markers, index, []);
      editor.getSession().setAnnotations(newAnnotations);

      if (newMarkers && newMarkers.length > 0) {
        _this.handleMarkers(newMarkers, editor);
      }

      for (var i = 0; i < $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.editorOptions.length; i++) {
        var option = $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.editorOptions[i];

        if (availableOptions.hasOwnProperty(option)) {
          editor.setOption(option, _this.props[option]);
        } else if (_this.props[option]) {
          console.warn("ReaceAce: editor option " + option + " was activated but not found. Did you need to import a related tool or did you possibly mispell the option?");
        }
      }

      _this.handleOptions(_this.props, editor);

      if (Array.isArray(commands)) {
        commands.forEach(function (command) {
          if (typeof command.exec === "string") {
            editor.commands.bindKey(command.bindKey, command.exec);
          } else {
            editor.commands.addCommand(command);
          }
        });
      }

      if (keyboardHandler) {
        editor.setKeyboardHandler("ace/keyboard/" + keyboardHandler);
      }
    });

    if (className) {
      this.refEditor.className += " " + className;
    }

    if (focus) {
      this.splitEditor.focus();
    }

    var sp = this.editor.env.split;
    sp.setOrientation(this.props.orientation === "below" ? sp.BELOW : sp.BESIDE);
    sp.resize(true);

    if (onLoad) {
      onLoad(sp);
    }
  };

  SplitComponent.prototype.componentDidUpdate = function (prevProps) {
    var _this = this;

    var oldProps = prevProps;
    var nextProps = this.props;
    var split = this.editor.env.split;

    if (nextProps.splits !== oldProps.splits) {
      split.setSplits(nextProps.splits);
    }

    if (nextProps.orientation !== oldProps.orientation) {
      split.setOrientation(nextProps.orientation === "below" ? split.BELOW : split.BESIDE);
    }

    split.forEach(function (editor, index) {
      if (nextProps.mode !== oldProps.mode) {
        editor.getSession().setMode("ace/mode/" + nextProps.mode);
      }

      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {
        if (nextProps.keyboardHandler) {
          editor.setKeyboardHandler("ace/keyboard/" + nextProps.keyboardHandler);
        } else {
          editor.setKeyboardHandler(null);
        }
      }

      if (nextProps.fontSize !== oldProps.fontSize) {
        editor.setFontSize(nextProps.fontSize);
      }

      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {
        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);
      }

      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {
        editor.setShowPrintMargin(nextProps.showPrintMargin);
      }

      if (nextProps.showGutter !== oldProps.showGutter) {
        editor.renderer.setShowGutter(nextProps.showGutter);
      }

      for (var i = 0; i < $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.editorOptions.length; i++) {
        var option = $c2ccb7543f2fda23f81001fb5ae$var$editorOptions_1.editorOptions[i];

        if (nextProps[option] !== oldProps[option]) {
          editor.setOption(option, nextProps[option]);
        }
      }

      if (!$c2ccb7543f2fda23f81001fb5ae$var$isEqual(nextProps.setOptions, oldProps.setOptions)) {
        _this.handleOptions(nextProps, editor);
      }

      var nextValue = $c2ccb7543f2fda23f81001fb5ae$var$get(nextProps.value, index, "");

      if (editor.getValue() !== nextValue) {
        // editor.setValue is a synchronous function call, change event is emitted before setValue return.
        _this.silent = true;
        var pos = editor.session.selection.toJSON();
        editor.setValue(nextValue, nextProps.cursorStart);
        editor.session.selection.fromJSON(pos);
        _this.silent = false;
      }

      var newAnnotations = $c2ccb7543f2fda23f81001fb5ae$var$get(nextProps.annotations, index, []);
      var oldAnnotations = $c2ccb7543f2fda23f81001fb5ae$var$get(oldProps.annotations, index, []);

      if (!$c2ccb7543f2fda23f81001fb5ae$var$isEqual(newAnnotations, oldAnnotations)) {
        editor.getSession().setAnnotations(newAnnotations);
      }

      var newMarkers = $c2ccb7543f2fda23f81001fb5ae$var$get(nextProps.markers, index, []);
      var oldMarkers = $c2ccb7543f2fda23f81001fb5ae$var$get(oldProps.markers, index, []);

      if (!$c2ccb7543f2fda23f81001fb5ae$var$isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {
        _this.handleMarkers(newMarkers, editor);
      }
    });

    if (nextProps.className !== oldProps.className) {
      var appliedClasses = this.refEditor.className;
      var appliedClassesArray_1 = appliedClasses.trim().split(" ");
      var oldClassesArray = oldProps.className.trim().split(" ");
      oldClassesArray.forEach(function (oldClass) {
        var index = appliedClassesArray_1.indexOf(oldClass);
        appliedClassesArray_1.splice(index, 1);
      });
      this.refEditor.className = " " + nextProps.className + " " + appliedClassesArray_1.join(" ");
    }

    if (nextProps.theme !== oldProps.theme) {
      split.setTheme("ace/theme/" + nextProps.theme);
    }

    if (nextProps.focus && !oldProps.focus) {
      this.splitEditor.focus();
    }

    if (nextProps.height !== this.props.height || nextProps.width !== this.props.width) {
      this.editor.resize();
    }
  };

  SplitComponent.prototype.componentWillUnmount = function () {
    this.editor.destroy();
    this.editor = null;
  };

  SplitComponent.prototype.onChange = function (event) {
    if (this.props.onChange && !this.silent) {
      var value_1 = [];
      this.editor.env.split.forEach(function (editor) {
        value_1.push(editor.getValue());
      });
      this.props.onChange(value_1, event);
    }
  };

  SplitComponent.prototype.onSelectionChange = function (event) {
    if (this.props.onSelectionChange) {
      var value_2 = [];
      this.editor.env.split.forEach(function (editor) {
        value_2.push(editor.getSelection());
      });
      this.props.onSelectionChange(value_2, event);
    }
  };

  SplitComponent.prototype.onCursorChange = function (event) {
    if (this.props.onCursorChange) {
      var value_3 = [];
      this.editor.env.split.forEach(function (editor) {
        value_3.push(editor.getSelection());
      });
      this.props.onCursorChange(value_3, event);
    }
  };

  SplitComponent.prototype.onFocus = function (event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }
  };

  SplitComponent.prototype.onInput = function (event) {
    if (this.props.onInput) {
      this.props.onInput(event);
    }
  };

  SplitComponent.prototype.onBlur = function (event) {
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }
  };

  SplitComponent.prototype.onCopy = function (text) {
    if (this.props.onCopy) {
      this.props.onCopy(text);
    }
  };

  SplitComponent.prototype.onPaste = function (text) {
    if (this.props.onPaste) {
      this.props.onPaste(text);
    }
  };

  SplitComponent.prototype.onScroll = function () {
    if (this.props.onScroll) {
      this.props.onScroll(this.editor);
    }
  };

  SplitComponent.prototype.handleOptions = function (props, editor) {
    var setOptions = Object.keys(props.setOptions);

    for (var y = 0; y < setOptions.length; y++) {
      editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);
    }
  };

  SplitComponent.prototype.handleMarkers = function (markers, editor) {
    // remove foreground markers
    var currentMarkers = editor.getSession().getMarkers(true);

    for (var i in currentMarkers) {
      if (currentMarkers.hasOwnProperty(i)) {
        editor.getSession().removeMarker(currentMarkers[i].id);
      }
    } // remove background markers


    currentMarkers = editor.getSession().getMarkers(false);

    for (var i in currentMarkers) {
      if (currentMarkers.hasOwnProperty(i)) {
        editor.getSession().removeMarker(currentMarkers[i].id);
      }
    } // add new markers


    markers.forEach(function (_a) {
      var startRow = _a.startRow,
          startCol = _a.startCol,
          endRow = _a.endRow,
          endCol = _a.endCol,
          className = _a.className,
          type = _a.type,
          _b = _a.inFront,
          inFront = _b === void 0 ? false : _b;
      var range = new $c2ccb7543f2fda23f81001fb5ae$var$ace_builds_1.Range(startRow, startCol, endRow, endCol);
      editor.getSession().addMarker(range, className, type, inFront);
    });
  };

  SplitComponent.prototype.updateRef = function (item) {
    this.refEditor = item;
  };

  SplitComponent.prototype.render = function () {
    var _a = this.props,
        name = _a.name,
        width = _a.width,
        height = _a.height,
        style = _a.style;
    var divStyle = $c2ccb7543f2fda23f81001fb5ae$var$__assign({
      width: width,
      height: height
    }, style);
    return $c2ccb7543f2fda23f81001fb5ae$var$React.createElement("div", {
      ref: this.updateRef,
      id: name,
      style: divStyle
    });
  };

  SplitComponent.propTypes = {
    className: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    debounceChangePeriod: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    defaultValue: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.arrayOf($c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string),
    focus: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    fontSize: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.oneOfType([$c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number, $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string]),
    height: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    mode: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    name: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    onBlur: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onChange: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onCopy: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onFocus: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onInput: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onLoad: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onPaste: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onScroll: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    orientation: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    showGutter: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    splits: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    theme: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    value: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.arrayOf($c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string),
    width: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    onSelectionChange: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onCursorChange: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    onBeforeLoad: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.func,
    minLines: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    maxLines: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    readOnly: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    highlightActiveLine: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    tabSize: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    showPrintMargin: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    cursorStart: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.number,
    editorProps: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.object,
    setOptions: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.object,
    style: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.object,
    scrollMargin: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array,
    annotations: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array,
    markers: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array,
    keyboardHandler: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.string,
    wrapEnabled: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool,
    enableBasicAutocompletion: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.oneOfType([$c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool, $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array]),
    enableLiveAutocompletion: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.oneOfType([$c2ccb7543f2fda23f81001fb5ae$var$PropTypes.bool, $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array]),
    commands: $c2ccb7543f2fda23f81001fb5ae$var$PropTypes.array
  };
  SplitComponent.defaultProps = {
    name: "ace-editor",
    focus: false,
    orientation: "beside",
    splits: 2,
    mode: "",
    theme: "",
    height: "500px",
    width: "500px",
    value: [],
    fontSize: 12,
    showGutter: true,
    onChange: null,
    onPaste: null,
    onLoad: null,
    onScroll: null,
    minLines: null,
    maxLines: null,
    readOnly: false,
    highlightActiveLine: true,
    showPrintMargin: true,
    tabSize: 4,
    cursorStart: 1,
    editorProps: {},
    style: {},
    scrollMargin: [0, 0, 0, 0],
    setOptions: {},
    wrapEnabled: false,
    enableBasicAutocompletion: false,
    enableLiveAutocompletion: false
  };
  return SplitComponent;
}($c2ccb7543f2fda23f81001fb5ae$var$React.Component);

var $c2ccb7543f2fda23f81001fb5ae$export$default = $c2ccb7543f2fda23f81001fb5ae$var$SplitComponent;
$c2ccb7543f2fda23f81001fb5ae$exports.default = $c2ccb7543f2fda23f81001fb5ae$export$default; //# sourceMappingURL=split.js.map