var $bcf172adda76aaa284b21487dbfc2739$exports = {};
$parcel$require("bcf172adda76aaa284b21487dbfc2739", "tslib");
$parcel$require("bcf172adda76aaa284b21487dbfc2739", "react");
$parcel$require("bcf172adda76aaa284b21487dbfc2739", "../../common/errors");
$parcel$require("bcf172adda76aaa284b21487dbfc2739", "../../common/utils");
$parcel$require("bcf172adda76aaa284b21487dbfc2739", "./hotkeysEvents");

function $bcf172adda76aaa284b21487dbfc2739$export$HotkeysTarget(WrappedComponent) {
  if (!$bcf172adda76aaa284b21487dbfc2739$import$isFunction(WrappedComponent.prototype.renderHotkeys)) {
    console.warn($bcf172adda76aaa284b21487dbfc2739$import$HOTKEYS_WARN_DECORATOR_NO_METHOD);
  }

  return _a =
  /** @class */
  function (_super) {
    $bcf172adda76aaa284b21487dbfc2739$import$tslib_1.__extends(HotkeysTargetClass, _super);

    function HotkeysTargetClass() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    HotkeysTargetClass.prototype.componentWillMount = function () {
      if (_super.prototype.componentWillMount != null) {
        _super.prototype.componentWillMount.call(this);
      }

      this.localHotkeysEvents = new $bcf172adda76aaa284b21487dbfc2739$import$HotkeysEvents($bcf172adda76aaa284b21487dbfc2739$import$HotkeyScope.LOCAL);
      this.globalHotkeysEvents = new $bcf172adda76aaa284b21487dbfc2739$import$HotkeysEvents($bcf172adda76aaa284b21487dbfc2739$import$HotkeyScope.GLOBAL);
    };

    HotkeysTargetClass.prototype.componentDidMount = function () {
      if (_super.prototype.componentDidMount != null) {
        _super.prototype.componentDidMount.call(this);
      } // attach global key event listeners


      document.addEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
      document.addEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
    };

    HotkeysTargetClass.prototype.componentWillUnmount = function () {
      if (_super.prototype.componentWillUnmount != null) {
        _super.prototype.componentWillUnmount.call(this);
      }

      document.removeEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
      document.removeEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
      this.globalHotkeysEvents.clear();
      this.localHotkeysEvents.clear();
    };

    HotkeysTargetClass.prototype.render = function () {
      var _this = this;

      var element = _super.prototype.render.call(this);

      if (element == null) {
        // always return `element` in case caller is distinguishing between `null` and `undefined`
        return element;
      }

      if (!$bcf172adda76aaa284b21487dbfc2739$import$React.isValidElement(element)) {
        console.warn($bcf172adda76aaa284b21487dbfc2739$import$HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);
        return element;
      }

      if ($bcf172adda76aaa284b21487dbfc2739$import$isFunction(this.renderHotkeys)) {
        var hotkeys = this.renderHotkeys();
        this.localHotkeysEvents.setHotkeys(hotkeys.props);
        this.globalHotkeysEvents.setHotkeys(hotkeys.props);

        if (this.localHotkeysEvents.count() > 0) {
          var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;
          var _a = element.props,
              existingKeyDown_1 = _a.keyDown,
              existingKeyUp_1 = _a.keyUp;

          var onKeyDown = function (e) {
            _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);

            $bcf172adda76aaa284b21487dbfc2739$import$safeInvoke(existingKeyDown_1, e);
          };

          var onKeyUp = function (e) {
            _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);

            $bcf172adda76aaa284b21487dbfc2739$import$safeInvoke(existingKeyUp_1, e);
          };

          return $bcf172adda76aaa284b21487dbfc2739$import$React.cloneElement(element, {
            tabIndex: tabIndex,
            onKeyDown: onKeyDown,
            onKeyUp: onKeyUp
          });
        }
      }

      return element;
    };

    return HotkeysTargetClass;
  }(WrappedComponent), _a.displayName = "HotkeysTarget(" + $bcf172adda76aaa284b21487dbfc2739$import$getDisplayName(WrappedComponent) + ")", _a;

  var _a;
} //# sourceMappingURL=hotkeysTarget.js.map


$bcf172adda76aaa284b21487dbfc2739$exports.HotkeysTarget = $bcf172adda76aaa284b21487dbfc2739$export$HotkeysTarget;