var $c126cfe777031f02db785b30e1c4$exports = {};
$parcel$require("8016c126cfe777031f02db785b30e1c4", "tslib");
$parcel$require("8016c126cfe777031f02db785b30e1c4", "classnames");
$parcel$require("8016c126cfe777031f02db785b30e1c4", "react");
$parcel$require("8016c126cfe777031f02db785b30e1c4", "../../common");
$parcel$require("8016c126cfe777031f02db785b30e1c4", "../icon/icon");
$parcel$require("8016c126cfe777031f02db785b30e1c4", "./hotkeyParser");
var $c126cfe777031f02db785b30e1c4$var$KeyIcons = {
  alt: "key-option",
  cmd: "key-command",
  ctrl: "key-control",
  delete: "key-delete",
  down: "arrow-down",
  enter: "key-enter",
  left: "arrow-left",
  meta: "key-command",
  right: "arrow-right",
  shift: "key-shift",
  up: "arrow-up"
};

var $c126cfe777031f02db785b30e1c4$export$KeyCombo =
/** @class */
function (_super) {
  $c126cfe777031f02db785b30e1c4$import$tslib_1.__extends(KeyCombo, _super);

  function KeyCombo() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.renderKey = function (key, index) {
      var icon = $c126cfe777031f02db785b30e1c4$var$KeyIcons[key];
      var reactKey = "key-" + index;
      return icon == null ? $c126cfe777031f02db785b30e1c4$import$React.createElement("kbd", {
        className: $c126cfe777031f02db785b30e1c4$import$Classes.KEY,
        key: reactKey
      }, key) : $c126cfe777031f02db785b30e1c4$import$React.createElement("kbd", {
        className: $c126cfe777031f02db785b30e1c4$import$classNames($c126cfe777031f02db785b30e1c4$import$Classes.KEY, $c126cfe777031f02db785b30e1c4$import$Classes.MODIFIER_KEY),
        key: reactKey
      }, $c126cfe777031f02db785b30e1c4$import$React.createElement($c126cfe777031f02db785b30e1c4$import$Icon, {
        icon: icon
      }), " ", key);
    };

    _this.renderMinimalKey = function (key, index) {
      var icon = $c126cfe777031f02db785b30e1c4$var$KeyIcons[key];
      return icon == null ? key : $c126cfe777031f02db785b30e1c4$import$React.createElement($c126cfe777031f02db785b30e1c4$import$Icon, {
        icon: icon,
        key: "key-" + index
      });
    };

    return _this;
  }

  KeyCombo.prototype.render = function () {
    var _a = this.props,
        className = _a.className,
        combo = _a.combo,
        minimal = _a.minimal;
    var keys = $c126cfe777031f02db785b30e1c4$import$normalizeKeyCombo(combo).map(function (key) {
      return key.length === 1 ? key.toUpperCase() : key;
    }).map(minimal ? this.renderMinimalKey : this.renderKey);
    return $c126cfe777031f02db785b30e1c4$import$React.createElement("span", {
      className: $c126cfe777031f02db785b30e1c4$import$classNames($c126cfe777031f02db785b30e1c4$import$Classes.KEY_COMBO, className)
    }, keys);
  };

  KeyCombo.displayName = $c126cfe777031f02db785b30e1c4$import$DISPLAYNAME_PREFIX + ".KeyCombo";
  return KeyCombo;
}($c126cfe777031f02db785b30e1c4$import$React.Component);

$c126cfe777031f02db785b30e1c4$exports.KeyCombo = $c126cfe777031f02db785b30e1c4$export$KeyCombo;