var $aba0e756cae7da835b5249d97d95ca52$exports = {};
$parcel$require("aba0e756cae7da835b5249d97d95ca52", "tslib");
$parcel$require("aba0e756cae7da835b5249d97d95ca52", "apollo-link");

function $aba0e756cae7da835b5249d97d95ca52$export$onError(errorHandler) {
  return new $aba0e756cae7da835b5249d97d95ca52$import$ApolloLink(function (operation, forward) {
    return new $aba0e756cae7da835b5249d97d95ca52$import$Observable(function (observer) {
      var sub;
      var retriedSub;
      var retriedResult;

      try {
        sub = forward(operation).subscribe({
          next: function (result) {
            if (result.errors) {
              retriedResult = errorHandler({
                graphQLErrors: result.errors,
                response: result,
                operation: operation,
                forward: forward
              });

              if (retriedResult) {
                retriedSub = retriedResult.subscribe({
                  next: observer.next.bind(observer),
                  error: observer.error.bind(observer),
                  complete: observer.complete.bind(observer)
                });
                return;
              }
            }

            observer.next(result);
          },
          error: function (networkError) {
            retriedResult = errorHandler({
              operation: operation,
              networkError: networkError,
              graphQLErrors: networkError && networkError.result && networkError.result.errors,
              forward: forward
            });

            if (retriedResult) {
              retriedSub = retriedResult.subscribe({
                next: observer.next.bind(observer),
                error: observer.error.bind(observer),
                complete: observer.complete.bind(observer)
              });
              return;
            }

            observer.error(networkError);
          },
          complete: function () {
            if (!retriedResult) {
              observer.complete.bind(observer)();
            }
          }
        });
      } catch (e) {
        errorHandler({
          networkError: e,
          operation: operation,
          forward: forward
        });
        observer.error(e);
      }

      return function () {
        if (sub) sub.unsubscribe();
        if (retriedSub) sub.unsubscribe();
      };
    });
  });
}

var $aba0e756cae7da835b5249d97d95ca52$export$ErrorLink = function (_super) {
  $aba0e756cae7da835b5249d97d95ca52$import$__extends(ErrorLink, _super);

  function ErrorLink(errorHandler) {
    var _this = _super.call(this) || this;

    _this.link = $aba0e756cae7da835b5249d97d95ca52$export$onError(errorHandler);
    return _this;
  }

  ErrorLink.prototype.request = function (operation, forward) {
    return this.link.request(operation, forward);
  };

  return ErrorLink;
}($aba0e756cae7da835b5249d97d95ca52$import$ApolloLink);

$aba0e756cae7da835b5249d97d95ca52$exports.onError = $aba0e756cae7da835b5249d97d95ca52$export$onError;
$aba0e756cae7da835b5249d97d95ca52$exports.ErrorLink = $aba0e756cae7da835b5249d97d95ca52$export$ErrorLink;