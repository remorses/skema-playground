"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const native_1 = __importDefault(require("styled-components/native"));
const styleProps_1 = require("../src/styleProps");
exports.Box = native_1.default.View.attrs((props) => ({
    variants: props.variants || ['box']
})) `
    flex-direction: column;
    width: 100%;
    height: auto;
    margin: 0;
    padding: 0;
    ${styleProps_1.variants}
    ${styleProps_1.box}
`;
exports.Box.displayName = 'Box';
exports.Card = native_1.default.View.attrs((props) => ({
    variants: props.variants || ['card']
})) `
    flex-direction: column;
    width: 100%;
    height: auto;
    margin: 0;
    padding: 0;
    ${styleProps_1.variants}
    ${styleProps_1.box}
`;
exports.Card.displayName = 'Card';
exports.Text = native_1.default.Text.attrs((props) => ({
    variants: props.variants || ['text']
})) `
    flex-direction: column;
    width: 100%;
    margin: 0;
    padding: 0;
    ${styleProps_1.variants}
    ${styleProps_1.text}
`;
exports.Text.displayName = 'Text';
exports.Button = native_1.default.Button.attrs((props) => ({
    title: props.children,
    variants: props.variants || ['button'],
})) `
    width: auto;
    padding: 4px 8px;
    font-size: inherit;
    line-height: inherit;
    ${styleProps_1.variants}
    ${styleProps_1.box}
`;
exports.Button.displayName = 'Button';
exports.Image = native_1.default.Image.attrs((props) => ({
    src: props.source,
    variants: props.variants || ['image']
})) `
    ${styleProps_1.variants}
    ${styleProps_1.box}
`;
exports.Image.displayName = 'Image';
exports.ScrollView = native_1.default.ScrollView.attrs((props) => ({
    variants: props.variants || ['scrollview']
})) `
    width: 100%;
    height: auto;
    ${styleProps_1.variants}
    ${styleProps_1.box}
`;
exports.ScrollView.displayName = 'ScrollView';
exports.Hidden = native_1.default.View `
    visibility: hidden;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    ${styleProps_1.box}
`;
exports.Hidden.displayName = 'Hidden';
exports.Link = native_1.default.Button.attrs((props) => ({
    variants: props.variants || ['link']
})) `
    ${styleProps_1.variants}
    ${styleProps_1.text}
`;
exports.Link.displayName = 'Link';
exports.H1 = (props) => (react_1.default.createElement(exports.Text, Object.assign({ variants: ['h1'] }, props)));
exports.H1.displayName = 'H1';
exports.H2 = (props) => (react_1.default.createElement(exports.Text, Object.assign({ variants: ['h2'] }, props)));
exports.H2.displayName = 'H2';
exports.Row = (props) => (react_1.default.createElement(exports.Box, Object.assign({ flexDirection: 'row' }, props)));
exports.Row.displayName = 'Row';
exports.Column = exports.Box;
